{"test-group-name":"releaseopenshiftocpinstallere2eovirt44","query":"origin-ci-test/logs/release-openshift-ocp-installer-e2e-ovirt-4.4","status":"Served 81234 results in 1.63 seconds","phase-timer":{"phases":["config load","cache peek (fail: memcache key missing)","state fetch","state decompress","state unmarshal","table creation","table serialize (gob+snappy: 3738KiB)","table querying"],"delta":[0.000020746,0.001506012,0.11543353,0.301657724,0.123777165,0.306207947,0.575270938,0.206144626],"total":1.630018688},"cached":false,"summary":"","bugs":{},"changelists":["1155","1154","1153","1152","1151","1150","1149","1148","1147","1146","1145","1144","1143","1142","1141","1140","1139","1138","1137","1136","1135","1134","1133","1132","1131","1130","1129","1128","1127","1126","1125","1124","1123","1122","1121","1120","1119","1118","1117","1116","1115","1114","1113","1112","1111","1110","1109","1108","1107","1106","1105","1104","1103","1102","1101","1100","1099","1098","1097","1096","1095","1094","1093","1092","1091","1090","1089","1088","1087","1086","1085","1084","1083","1082","1081","1080","1079","1078","1077","1076","1075","1074","1073","1072","1071","1070","1069","1068","1067","1066","1065","1064","1063","1062","1061","1060","1059","1058","1057","1056","1055","1054","1053","1052","1051","1050","1049","1048","1047","1046","1045","1044","1043","1042","1041","1040","1039","1038","1037","1036","1035","1034","1033","1032","1031","1030","1029","1028","1027","1026","1025","1024","1023","1022","1021","1020","1019","1018","1017","1016","1015","1014","1013","1012","1011","1010","1009","1008","1007","1006","1005","1004","1003"],"column_ids":["1155","1154","1153","1152","1151","1150","1149","1148","1147","1146","1145","1144","1143","1142","1141","1140","1139","1138","1137","1136","1135","1134","1133","1132","1131","1130","1129","1128","1127","1126","1125","1124","1123","1122","1121","1120","1119","1118","1117","1116","1115","1114","1113","1112","1111","1110","1109","1108","1107","1106","1105","1104","1103","1102","1101","1100","1099","1098","1097","1096","1095","1094","1093","1092","1091","1090","1089","1088","1087","1086","1085","1084","1083","1082","1081","1080","1079","1078","1077","1076","1075","1074","1073","1072","1071","1070","1069","1068","1067","1066","1065","1064","1063","1062","1061","1060","1059","1058","1057","1056","1055","1054","1053","1052","1051","1050","1049","1048","1047","1046","1045","1044","1043","1042","1041","1040","1039","1038","1037","1036","1035","1034","1033","1032","1031","1030","1029","1028","1027","1026","1025","1024","1023","1022","1021","1020","1019","1018","1017","1016","1015","1014","1013","1012","1011","1010","1009","1008","1007","1006","1005","1004","1003"],"custom-columnscolumn-header-names":["Date","Time","Commit","Commit","Infra-Commit"],"groups":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"metrics":["test-duration-minutes"],"tests":[{"name":"operator.Run template e2e-ovirt - e2e-ovirt container test","original-name":"operator.Run template e2e-ovirt - e2e-ovirt container test","alert":{"fail-cl":"1","fail-count":16,"fail-time":1588354748000,"text":"Alert: 16 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"1","pass-count":0,"pass-time":1588343650000,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"operator.Run template e2e-ovirt - e2e-ovirt container test (operator)"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":16,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":5,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":1,"value":1},{"count":5,"value":12},{"count":1,"value":1},{"count":7,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":8,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":1},{"count":3,"value":12},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":4,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":17,"value":12},{"count":1,"value":1},{"count":4,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":15,"value":12}],"target":"operator"},{"name":"Overall","original-name":"Overall","alert":{"fail-cl":"1","fail-count":4,"fail-time":1588603852000,"text":"Alert: 4 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"1","pass-count":0,"pass-time":1588591881000,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"Overall"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":4,"value":12},{"count":11,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":9,"value":12},{"count":1,"value":4},{"count":2,"value":12},{"count":1,"value":1},{"count":5,"value":12},{"count":1,"value":1},{"count":7,"value":12},{"count":1,"value":4},{"count":3,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":8,"value":12},{"count":1,"value":1},{"count":5,"value":12},{"count":1,"value":1},{"count":5,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":4,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":17,"value":12},{"count":1,"value":1},{"count":4,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":15,"value":12}],"target":"Overall"},{"name":"operator.Run template e2e-ovirt - e2e-ovirt container setup","original-name":"operator.Run template e2e-ovirt - e2e-ovirt container setup","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":7,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":3,"value":12},{"count":10,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":3,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":2,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":6,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":14,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":4,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":12}],"target":"operator"},{"name":"Monitor cluster while tests execute","original-name":"Monitor cluster while tests execute","alert":{"fail-cl":"1","fail-count":55,"fail-time":1586776826000,"text":"Alert: 55 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"","pass-count":0,"pass-time":0,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"Monitor cluster while tests execute"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":2,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":12,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":3,"value":12},{"count":3,"value":0},{"count":2,"value":12},{"count":1,"value":0},{"count":4,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":4,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0}],"target":"Monitor cluster while tests execute"},{"name":"[k8s.io] [sig-node] Events [Top Level] [k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Events [Top Level] [k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":{"fail-cl":"1","fail-count":4,"fail-time":1588483579000,"text":"Alert: 4 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"1","pass-count":0,"pass-time":1588461920000,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"[k8s.io] [sig-node] Events [Top Level] [k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":2,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":5,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":4,"value":0},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Events [Top Level] [k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":7,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":3,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":0},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":1},{"count":4,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be rejected when no endpoints exist [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be rejected when no endpoints exist [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":{"fail-cl":"1","fail-count":8,"fail-time":1588375330000,"text":"Alert: 8 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"1","pass-count":0,"pass-time":1588343650000,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"[sig-network] Services [Top Level] [sig-network] Services should be rejected when no endpoints exist [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":2,"value":12},{"count":2,"value":0},{"count":2,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be rejected when no endpoints exist [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]","original-name":"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":0},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":4,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have no crashlooping pods in core namespaces over two minutes [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have no crashlooping pods in core namespaces over two minutes [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":12},{"count":6,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":13,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have no crashlooping pods in core namespaces over two minutes [Suite:openshift/conformance/parallel]"},{"name":"[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"job.initialize","original-name":"job.initialize","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":9,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":1,"value":0},{"count":5,"value":12},{"count":1,"value":0},{"count":7,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":2,"value":12},{"count":3,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":2,"value":12},{"count":2,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":8,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":0},{"count":5,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":63,"value":0}],"target":"job"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel/minimal]"},{"name":"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":12},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM can subscribe to the etcd operator [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM can subscribe to the etcd operator [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM can subscribe to the etcd operator [Suite:openshift/conformance/parallel]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":9,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":60,"value":0},{"count":1,"value":12},{"count":92,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Pod Disks [Top Level] [sig-storage] Pod Disks should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Pod Disks [Top Level] [sig-storage] Pod Disks should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","",""],"short_texts":["","","",""],"statuses":[{"count":71,"value":0},{"count":1,"value":12},{"count":36,"value":0},{"count":1,"value":12},{"count":8,"value":0},{"count":1,"value":12},{"count":21,"value":0},{"count":1,"value":12},{"count":13,"value":0}],"target":"[sig-storage] Pod Disks [Top Level] [sig-storage] Pod Disks should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"operator.Create the release image containing all images built by this job","original-name":"operator.Create the release image containing all images built by this job","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":26,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":16,"value":1},{"count":1,"value":0},{"count":30,"value":1},{"count":1,"value":0},{"count":7,"value":1},{"count":2,"value":12},{"count":65,"value":1}],"target":"operator"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel/minimal]"},{"name":"[sig-cli] Kubectl client Kubectl logs [Top Level] [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl logs [Top Level] [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl logs [Top Level] [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","",""],"short_texts":["","",""],"statuses":[{"count":119,"value":0},{"count":2,"value":12},{"count":5,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","",""],"short_texts":["","",""],"statuses":[{"count":119,"value":0},{"count":2,"value":12},{"count":5,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel/minimal]"},{"name":"[image_ecosystem][mongodb] openshift mongodb image  creating from a template [Top Level] [image_ecosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]","original-name":"[image_ecosystem][mongodb] openshift mongodb image  creating from a template [Top Level] [image_ecosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[image_ecosystem][mongodb] openshift mongodb image  creating from a template [Top Level] [image_ecosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["",""],"short_texts":["",""],"statuses":[{"count":120,"value":0},{"count":1,"value":12},{"count":5,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":120,"value":0},{"count":1,"value":12},{"count":32,"value":0}],"target":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":120,"value":0},{"count":1,"value":12},{"count":32,"value":0}],"target":"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":9,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":6,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] network isolation when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] network isolation when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Area:Networking] network isolation when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on a different node via a service IP [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on a different node via a service IP [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":9,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":6,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on a different node via a service IP [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on the same node via a service IP [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on the same node via a service IP [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on the same node via a service IP [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":9,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":6,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking][endpoints] admission [Top Level] [Area:Networking][endpoints] admission TestEndpointAdmission [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking][endpoints] admission [Top Level] [Area:Networking][endpoints] admission TestEndpointAdmission [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking][endpoints] admission [Top Level] [Area:Networking][endpoints] admission TestEndpointAdmission [Suite:openshift/conformance/parallel]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplate [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplate [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplate [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplateTransformationFromConfig [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplateTransformationFromConfig [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplateTransformationFromConfig [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][templates] templateinstance creation with invalid object reports error  [Top Level] [Conformance][templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][templates] templateinstance creation with invalid object reports error  [Top Level] [Conformance][templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Conformance][templates] templateinstance creation with invalid object reports error  [Top Level] [Conformance][templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:APIServer] [Top Level] [Feature:APIServer] TestTLSDefaults [Suite:openshift/conformance/parallel]","original-name":"[Feature:APIServer] [Top Level] [Feature:APIServer] TestTLSDefaults [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Feature:APIServer] [Top Level] [Feature:APIServer] TestTLSDefaults [Suite:openshift/conformance/parallel]"},{"name":"[Feature:AnnotationTrigger] Annotation trigger [Top Level] [Feature:AnnotationTrigger] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]","original-name":"[Feature:AnnotationTrigger] Annotation trigger [Top Level] [Feature:AnnotationTrigger] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:AnnotationTrigger] Annotation trigger [Top Level] [Feature:AnnotationTrigger] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] Multi-stage image builds  [Top Level] [Feature:Builds] Multi-stage image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds] Multi-stage image builds  [Top Level] [Feature:Builds] Multi-stage image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] Multi-stage image builds  [Top Level] [Feature:Builds] Multi-stage image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig [Top Level] [Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig [Top Level] [Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig [Top Level] [Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:ClusterResourceQuota]  TestClusterQuota [Top Level] [Feature:ClusterResourceQuota]  TestClusterQuota should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:ClusterResourceQuota]  TestClusterQuota [Top Level] [Feature:ClusterResourceQuota]  TestClusterQuota should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ClusterResourceQuota]  TestClusterQuota [Top Level] [Feature:ClusterResourceQuota]  TestClusterQuota should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs paused [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs paused [Conformance] should disable actions on deployments [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs paused [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs paused [Conformance] should disable actions on deployments [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs paused [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs paused [Conformance] should disable actions on deployments [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] should rollback to an older deployment [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] should rollback to an older deployment [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] should rollback to an older deployment [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] resolve the image pull spec [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] resolve the image pull spec [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] resolve the image pull spec [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] should successfully tag the deployed image [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] should successfully tag the deployed image [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] should successfully tag the deployed image [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] should run the custom deployment steps [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] should run the custom deployment steps [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] should run the custom deployment steps [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] should expand the config map key to a value [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] should expand the config map key to a value [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] should expand the config map key to a value [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should change image reference for internal images [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should change image reference for internal images [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should change image reference for internal images [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should preserve image reference for external images [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should preserve image reference for external images [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should preserve image reference for external images [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestMultipleImageChangeBuildTriggers [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestMultipleImageChangeBuildTriggers [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestMultipleImageChangeBuildTriggers [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage [Top Level] [Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage [Top Level] [Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage [Top Level] [Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] scopes TestScopedTokens [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] scopes TestScopedTokens [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] scopes TestScopedTokens [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one namespace in their lists of related objects [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one namespace in their lists of related objects [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one namespace in their lists of related objects [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] Managed cluster [Top Level] [Feature:Platform] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] Managed cluster [Top Level] [Feature:Platform] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] Managed cluster [Top Level] [Feature:Platform] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should should expose cluster services outside the cluster [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should should expose cluster services outside the cluster [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should should expose cluster services outside the cluster [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with catalogsources at version v1alpha1 [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with catalogsources at version v1alpha1 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with catalogsources at version v1alpha1 [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with clusterserviceversions at version v1alpha1 [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with clusterserviceversions at version v1alpha1 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with clusterserviceversions at version v1alpha1 [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM Report Upgradeable in OLM ClusterOperators status [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM Report Upgradeable in OLM ClusterOperators status [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM Report Upgradeable in OLM ClusterOperators status [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ProjectAPI]  TestInvalidRoleRefs [Top Level] [Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:ProjectAPI]  TestInvalidRoleRefs [Top Level] [Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ProjectAPI]  TestInvalidRoleRefs [Top Level] [Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ProjectAPI]  [Top Level] [Feature:ProjectAPI]  TestUnprivilegedNewProject [Suite:openshift/conformance/parallel]","original-name":"[Feature:ProjectAPI]  [Top Level] [Feature:ProjectAPI]  TestUnprivilegedNewProject [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ProjectAPI]  [Top Level] [Feature:ProjectAPI]  TestUnprivilegedNewProject [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]","original-name":"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]"},{"name":"[Feature:UserAPI] [Top Level] [Feature:UserAPI] groups should work [Suite:openshift/conformance/parallel]","original-name":"[Feature:UserAPI] [Top Level] [Feature:UserAPI] groups should work [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:UserAPI] [Top Level] [Feature:UserAPI] groups should work [Suite:openshift/conformance/parallel]"},{"name":"[Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation [Top Level] [Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation additionalCORSAllowedOrigins [Suite:openshift/conformance/parallel]","original-name":"[Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation [Top Level] [Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation additionalCORSAllowedOrigins [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation [Top Level] [Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation additionalCORSAllowedOrigins [Suite:openshift/conformance/parallel]"},{"name":"[Suite:openshift/oauth] LDAP IDP [Top Level] [Suite:openshift/oauth] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]","original-name":"[Suite:openshift/oauth] LDAP IDP [Top Level] [Suite:openshift/oauth] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Suite:openshift/oauth] LDAP IDP [Top Level] [Suite:openshift/oauth] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=\u003cexplicit-date\u003e --until=-1m [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=\u003cexplicit-date\u003e --until=-1m [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"cli - explicit-date"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --unit=kubelet --since=-1m [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --unit=kubelet --since=-1m [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --unit=kubelet --since=-1m [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc explain [Top Level] [cli] oc explain should contain proper fields description for special types [Suite:openshift/conformance/parallel]","original-name":"[cli] oc explain [Top Level] [cli] oc explain should contain proper fields description for special types [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc explain [Top Level] [cli] oc explain should contain proper fields description for special types [Suite:openshift/conformance/parallel]"},{"name":"[job][Conformance] openshift can execute jobs controller [Top Level] [job][Conformance] openshift can execute jobs controller should create and run a job in user project [Suite:openshift/conformance/parallel/minimal]","original-name":"[job][Conformance] openshift can execute jobs controller [Top Level] [job][Conformance] openshift can execute jobs controller should create and run a job in user project [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[job][Conformance] openshift can execute jobs controller [Top Level] [job][Conformance] openshift can execute jobs controller should create and run a job in user project [Suite:openshift/conformance/parallel/minimal]"},{"name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] GKE local SSD [Feature:GKELocalSSD] [Top Level] [k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] GKE local SSD [Feature:GKELocalSSD] [Top Level] [k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[k8s.io] GKE local SSD [Feature:GKELocalSSD] [Top Level] [k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] GKE node pools [Feature:GKENodePool] [Top Level] [k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] GKE node pools [Feature:GKENodePool] [Top Level] [k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[k8s.io] GKE node pools [Feature:GKENodePool] [Top Level] [k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a non-local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a non-local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a non-local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [Feature:Example] [k8s.io] Liveness [Top Level] [k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [Feature:Example] [k8s.io] Liveness [Top Level] [k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [Feature:Example] [k8s.io] Liveness [Top Level] [k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Mount propagation [Top Level] [k8s.io] [sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Mount propagation [Top Level] [k8s.io] [sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Mount propagation [Top Level] [k8s.io] [sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] crictl [Top Level] [k8s.io] [sig-node] crictl should be able to run crictl on the node [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] crictl [Top Level] [k8s.io] [sig-node] crictl should be able to run crictl on the node [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[k8s.io] [sig-node] crictl [Top Level] [k8s.io] [sig-node] crictl should be able to run crictl on the node [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Aggregator [Top Level] [sig-api-machinery] Aggregator Should be able to support the 1.10 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Aggregator [Top Level] [sig-api-machinery] Aggregator Should be able to support the 1.10 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Aggregator [Top Level] [sig-api-machinery] Aggregator Should be able to support the 1.10 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Discovery [Top Level] [sig-api-machinery] Discovery Custom resource should have storage version hash [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Discovery [Top Level] [sig-api-machinery] Discovery Custom resource should have storage version hash [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Discovery [Top Level] [sig-api-machinery] Discovery Custom resource should have storage version hash [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support cascading deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support cascading deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support cascading deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return pod details [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return pod details [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return pod details [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json,application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json,application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json,application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf,application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf,application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf,application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete successful finished jobs with limit of one successful job [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete successful finished jobs with limit of one successful job [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete successful finished jobs with limit of one successful job [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should not emit unexpected warnings [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should not emit unexpected warnings [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should not emit unexpected warnings [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support rollover [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support rollover [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support rollover [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should delete a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should delete a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should delete a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks succeed [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks succeed [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks succeed [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-auth] PodSecurityPolicy [Top Level] [sig-auth] PodSecurityPolicy should enforce the restricted policy.PodSecurityPolicy [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] PodSecurityPolicy [Top Level] [sig-auth] PodSecurityPolicy should enforce the restricted policy.PodSecurityPolicy [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-auth] PodSecurityPolicy [Top Level] [sig-auth] PodSecurityPolicy should enforce the restricted policy.PodSecurityPolicy [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl rolling-update [Top Level] [sig-cli] Kubectl client Kubectl rolling-update should support rolling-update to same image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl rolling-update [Top Level] [sig-cli] Kubectl client Kubectl rolling-update should support rolling-update to same image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl rolling-update [Top Level] [sig-cli] Kubectl client Kubectl rolling-update should support rolling-update to same image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run --rm job [Top Level] [sig-cli] Kubectl client Kubectl run --rm job should create a job from an image, then delete the job  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run --rm job [Top Level] [sig-cli] Kubectl client Kubectl run --rm job should create a job from an image, then delete the job  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run --rm job [Top Level] [sig-cli] Kubectl client Kubectl run --rm job should create a job from an image, then delete the job  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run pod [Top Level] [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run pod [Top Level] [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run pod [Top Level] [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client kubectl get output [Top Level] [sig-cli] Kubectl client kubectl get output should contain custom columns for each resource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client kubectl get output [Top Level] [sig-cli] Kubectl client kubectl get output should contain custom columns for each resource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client kubectl get output [Top Level] [sig-cli] Kubectl client kubectl get output should contain custom columns for each resource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] [Top Level] [sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] [Top Level] [sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] [Top Level] [sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-service-catalog] [Feature:PodPreset] PodPreset [Top Level] [sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-service-catalog] [Feature:PodPreset] PodPreset [Top Level] [sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-service-catalog] [Feature:PodPreset] PodPreset [Top Level] [sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner [Top Level] [sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner [Top Level] [sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner [Top Level] [sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir wrapper volumes [Top Level] [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir wrapper volumes [Top Level] [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir wrapper volumes [Top Level] [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] GCP Volumes GlusterFS [Top Level] [sig-storage] GCP Volumes GlusterFS should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] GCP Volumes GlusterFS [Top Level] [sig-storage] GCP Volumes GlusterFS should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] GCP Volumes GlusterFS [Top Level] [sig-storage] GCP Volumes GlusterFS should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] GCP Volumes NFSv4 [Top Level] [sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] GCP Volumes NFSv4 [Top Level] [sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] GCP Volumes NFSv4 [Top Level] [sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support subPath [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support subPath [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support subPath [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy [Top Level] [sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy [Top Level] [sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy [Top Level] [sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":9,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":6,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes:vsphere [Top Level] [sig-storage] PersistentVolumes:vsphere should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes:vsphere [Top Level] [sig-storage] PersistentVolumes:vsphere should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] PersistentVolumes:vsphere [Top Level] [sig-storage] PersistentVolumes:vsphere should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected combined [Top Level] [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected combined [Top Level] [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected combined [Top Level] [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Volume Disk Size [Feature:vsphere] [Top Level] [sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv has size rounded up correctly [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume Disk Size [Feature:vsphere] [Top Level] [sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv has size rounded up correctly [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume Disk Size [Feature:vsphere] [Top Level] [sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv has size rounded up correctly [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Volume limits [Top Level] [sig-storage] Volume limits should verify that all nodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volume limits [Top Level] [sig-storage] Volume limits should verify that all nodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Volume limits [Top Level] [sig-storage] Volume limits should verify that all nodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if only datastore is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if only datastore is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if only datastore is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if the availability zone specified in the storage class have no shared datastores under it. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if the availability zone specified in the storage class have no shared datastores under it. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if the availability zone specified in the storage class have no shared datastores under it. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with compatible policy and datastore without any zones specified in the storage class fails (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with compatible policy and datastore without any zones specified in the storage class fails (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with compatible policy and datastore without any zones specified in the storage class fails (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible datastore and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible datastore and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible datastore and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible storage policy along with compatible zone and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible storage policy along with compatible zone and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible storage policy along with compatible zone and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with multiple allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with multiple allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with multiple allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in the storage class. (No shared datastores exist among both zones) [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in the storage class. (No shared datastores exist among both zones) [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in the storage class. (No shared datastores exist among both zones) [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones, datastore and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones, datastore and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones, datastore and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created on a non-Workspace zone and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created on a non-Workspace zone and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created on a non-Workspace zone and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify dynamically created pv with multiple zones specified in the storage class, shows both the zones on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify dynamically created pv with multiple zones specified in the storage class, shows both the zones on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify dynamically created pv with multiple zones specified in the storage class, shows both the zones on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] vsphere statefulset [Top Level] [sig-storage] vsphere statefulset vsphere statefulset testing [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] vsphere statefulset [Top Level] [sig-storage] vsphere statefulset vsphere statefulset testing [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":126,"value":0},{"count":1,"value":12},{"count":26,"value":0}],"target":"[sig-storage] vsphere statefulset [Top Level] [sig-storage] vsphere statefulset vsphere statefulset testing [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"node client cert requests armoring: [Top Level] node client cert requests armoring: deny pod's access to /config/master API endpoint [Suite:openshift/conformance/parallel]","original-name":"node client cert requests armoring: [Top Level] node client cert requests armoring: deny pod's access to /config/master API endpoint [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"node client cert requests armoring: [Top Level] node client cert requests armoring: deny pod's access to /config/master API endpoint [Suite:openshift/conformance/parallel]"},{"name":"node client cert requests armoring: [Top Level] node client cert requests armoring: node-approver SA token compromised, don't approve random CSRs with client auth [Suite:openshift/conformance/parallel]","original-name":"node client cert requests armoring: [Top Level] node client cert requests armoring: node-approver SA token compromised, don't approve random CSRs with client auth [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"node client cert requests armoring: [Top Level] node client cert requests armoring: node-approver SA token compromised, don't approve random CSRs with client auth [Suite:openshift/conformance/parallel]"},{"name":"operator.Run template e2e-ovirt - e2e-ovirt container lease","original-name":"operator.Run template e2e-ovirt - e2e-ovirt container lease","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":7,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":11,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":15,"value":1},{"count":2,"value":0},{"count":5,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":4,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":21,"value":1},{"count":2,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":6,"value":12},{"count":1,"value":0},{"count":1,"value":12}],"target":"operator"},{"name":"[Area:Networking] Internal connectivity [Top Level] [Area:Networking] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] Internal connectivity [Top Level] [Area:Networking] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] Internal connectivity [Top Level] [Area:Networking] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]"},{"name":"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]","original-name":"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel/minimal]","original-name":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:APIServer] [Top Level] [Feature:APIServer] anonymous browsers should get a 403 from / [Suite:openshift/conformance/parallel]","original-name":"[Feature:APIServer] [Top Level] [Feature:APIServer] anonymous browsers should get a 403 from / [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:APIServer] [Top Level] [Feature:APIServer] anonymous browsers should get a 403 from / [Suite:openshift/conformance/parallel]"},{"name":"[Feature:APIServer] [Top Level] [Feature:APIServer] authenticated browser should get a 200 from / [Suite:openshift/conformance/parallel]","original-name":"[Feature:APIServer] [Top Level] [Feature:APIServer] authenticated browser should get a 200 from / [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:APIServer] [Top Level] [Feature:APIServer] authenticated browser should get a 200 from / [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Authentication]  TestFrontProxy [Top Level] [Feature:Authentication]  TestFrontProxy should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:Authentication]  TestFrontProxy [Top Level] [Feature:Authentication]  TestFrontProxy should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Authentication]  TestFrontProxy [Top Level] [Feature:Authentication]  TestFrontProxy should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] Optimized image builds  [Top Level] [Feature:Builds] Optimized image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds] Optimized image builds  [Top Level] [Feature:Builds] Optimized image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] Optimized image builds  [Top Level] [Feature:Builds] Optimized image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds] build have source revision metadata  started build [Top Level] [Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] build have source revision metadata  started build [Top Level] [Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] build have source revision metadata  started build [Top Level] [Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] build with empty source  started build [Top Level] [Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] build with empty source  started build [Top Level] [Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] build with empty source  started build [Top Level] [Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] buildconfig secret injector  [Top Level] [Feature:Builds] buildconfig secret injector  should inject secrets to the appropriate buildconfigs [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] buildconfig secret injector  [Top Level] [Feature:Builds] buildconfig secret injector  should inject secrets to the appropriate buildconfigs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] buildconfig secret injector  [Top Level] [Feature:Builds] buildconfig secret injector  should inject secrets to the appropriate buildconfigs [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] result image should have proper labels set  Docker build from a template [Top Level] [Feature:Builds] result image should have proper labels set  Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] result image should have proper labels set  Docker build from a template [Top Level] [Feature:Builds] result image should have proper labels set  Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] result image should have proper labels set  Docker build from a template [Top Level] [Feature:Builds] result image should have proper labels set  Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds] result image should have proper labels set  S2I build from a template [Top Level] [Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds] result image should have proper labels set  S2I build from a template [Top Level] [Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds] result image should have proper labels set  S2I build from a template [Top Level] [Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build [Top Level] [Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build [Top Level] [Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build [Top Level] [Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a docker template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a docker template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a docker template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] custom build with buildah  being created from new-build [Top Level] [Feature:Builds][Conformance] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] custom build with buildah  being created from new-build [Top Level] [Feature:Builds][Conformance] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] custom build with buildah  being created from new-build [Top Level] [Feature:Builds][Conformance] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] imagechangetriggers  [Top Level] [Feature:Builds][Conformance] imagechangetriggers  imagechangetriggers should trigger builds of all types [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] imagechangetriggers  [Top Level] [Feature:Builds][Conformance] imagechangetriggers  imagechangetriggers should trigger builds of all types [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] imagechangetriggers  [Top Level] [Feature:Builds][Conformance] imagechangetriggers  imagechangetriggers should trigger builds of all types [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] s2i build with a quota  Building from a template [Top Level] [Feature:Builds][Conformance] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] s2i build with a quota  Building from a template [Top Level] [Feature:Builds][Conformance] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] s2i build with a quota  Building from a template [Top Level] [Feature:Builds][Conformance] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][Conformance] s2i build with a root user image [Top Level] [Feature:Builds][Conformance] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][Conformance] s2i build with a root user image [Top Level] [Feature:Builds][Conformance] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][Conformance] s2i build with a root user image [Top Level] [Feature:Builds][Conformance] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template [Top Level] [Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template [Top Level] [Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template [Top Level] [Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for docker [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for docker [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for docker [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhook [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhook [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhook [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPing [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPing [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPing [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImage [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImage [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImage [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImageStream [Suite:openshift/conformance/parallel]","original-name":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImageStream [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImageStream [Suite:openshift/conformance/parallel]"},{"name":"[Feature:CLI] CLI [Top Level] [Feature:CLI] CLI can run inside of a busybox container [Suite:openshift/conformance/parallel]","original-name":"[Feature:CLI] CLI [Top Level] [Feature:CLI] CLI can run inside of a busybox container [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:CLI] CLI [Top Level] [Feature:CLI] CLI can run inside of a busybox container [Suite:openshift/conformance/parallel]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs  [Top Level] [Feature:DeploymentConfig] deploymentconfigs  should adhere to Three Laws of Controllers [Conformance] [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs  [Top Level] [Feature:DeploymentConfig] deploymentconfigs  should adhere to Three Laws of Controllers [Conformance] [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs  [Top Level] [Feature:DeploymentConfig] deploymentconfigs  should adhere to Three Laws of Controllers [Conformance] [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs generation [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs generation [Conformance] should deploy based on a status version bump [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs generation [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs generation [Conformance] should deploy based on a status version bump [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs generation [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs generation [Conformance] should deploy based on a status version bump [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] should let the deployment config with a NewReplicationControllerCreated reason [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] should let the deployment config with a NewReplicationControllerCreated reason [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] should let the deployment config with a NewReplicationControllerCreated reason [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs initially [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs initially [Conformance] should not deploy if pods never transition to ready [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs initially [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs initially [Conformance] should not deploy if pods never transition to ready [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs initially [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs initially [Conformance] should not deploy if pods never transition to ready [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation after deployer pod succeeded [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation after deployer pod succeeded [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation after deployer pod succeeded [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation of running deployment [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation of running deployment [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation of running deployment [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with config change in case the deployment is still running [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with config change in case the deployment is still running [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with config change in case the deployment is still running [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] should print the rollout history [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] should print the rollout history [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] should print the rollout history [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] should successfully trigger from an updated image [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] should successfully trigger from an updated image [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] should successfully trigger from an updated image [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should immediately start a new deployment [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should immediately start a new deployment [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should immediately start a new deployment [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should only deploy the last deployment [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should only deploy the last deployment [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should only deploy the last deployment [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] should include various info in status [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] should include various info in status [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] should include various info in status [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] should get all logs from retried hooks [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] should get all logs from retried hooks [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] should get all logs from retried hooks [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] should never persist more old deployments than acceptable after being observed by the controller [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] should never persist more old deployments than acceptable after being observed by the controller [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] should never persist more old deployments than acceptable after being observed by the controller [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] should run a deployment to completion and then scale to zero [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] should run a deployment to completion and then scale to zero [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] should run a deployment to completion and then scale to zero [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] when patched with empty image [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] when patched with empty image [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] when patched with empty image [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:ImageAppend] Image append [Top Level] [Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]","original-name":"[Feature:ImageAppend] Image append [Top Level] [Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageAppend] Image append [Top Level] [Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ImageExtract] Image extract [Top Level] [Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]","original-name":"[Feature:ImageExtract] Image extract [Top Level] [Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageExtract] Image extract [Top Level] [Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ImageInfo] Image info [Top Level] [Feature:ImageInfo] Image info should display information about images [Suite:openshift/conformance/parallel]","original-name":"[Feature:ImageInfo] Image info [Top Level] [Feature:ImageInfo] Image info should display information about images [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageInfo] Image info [Top Level] [Feature:ImageInfo] Image info should display information about images [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should identify a deleted image as missing [Suite:openshift/conformance/parallel]","original-name":"[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should identify a deleted image as missing [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should identify a deleted image as missing [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should return layers from tagged images [Suite:openshift/conformance/parallel]","original-name":"[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should return layers from tagged images [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should return layers from tagged images [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the object has the resolve-names annotation [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the object has the resolve-names annotation [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the object has the resolve-names annotation [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageAddSignature [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageAddSignature [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageAddSignature [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageRemoveSignature [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageRemoveSignature [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageRemoveSignature [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustom [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustom [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustom [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustomWithConfigChange [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustomWithConfigChange [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustomWithConfigChange [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDocker [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDocker [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDocker [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDockerWithConfigChange [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDockerWithConfigChange [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDockerWithConfigChange [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTI [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTI [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTI [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTIWithConfigChange [Suite:openshift/conformance/parallel]","original-name":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTIWithConfigChange [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTIWithConfigChange [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Machines] Managed cluster should [Top Level] [Feature:Machines] Managed cluster should have machine resources [Suite:openshift/conformance/parallel]","original-name":"[Feature:Machines] Managed cluster should [Top Level] [Feature:Machines] Managed cluster should have machine resources [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Machines] Managed cluster should [Top Level] [Feature:Machines] Managed cluster should have machine resources [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Marketplace] Marketplace diff name test [Top Level] [Feature:Marketplace] Marketplace diff name test [ocp-25672] create the samename opsrc\u0026csc [Suite:openshift/conformance/parallel]","original-name":"[Feature:Marketplace] Marketplace diff name test [Top Level] [Feature:Marketplace] Marketplace diff name test [ocp-25672] create the samename opsrc\u0026csc [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":149,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Marketplace] Marketplace diff name test [Top Level] [Feature:Marketplace] Marketplace diff name test [ocp-25672] create the samename opsrc\u0026csc [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Marketplace] Marketplace resources with labels provider displayName [Top Level] [Feature:Marketplace] Marketplace resources with labels provider displayName [ocp-21728]create opsrc with labels [Suite:openshift/conformance/parallel]","original-name":"[Feature:Marketplace] Marketplace resources with labels provider displayName [Top Level] [Feature:Marketplace] Marketplace resources with labels provider displayName [ocp-21728]create opsrc with labels [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":149,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Marketplace] Marketplace resources with labels provider displayName [Top Level] [Feature:Marketplace] Marketplace resources with labels provider displayName [ocp-21728]create opsrc with labels [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server should use http1.1 only to prevent http2 connection reuse [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server should use http1.1 only to prevent http2 connection reuse [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server should use http1.1 only to prevent http2 connection reuse [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OAuthServer] well-known endpoint [Top Level] [Feature:OAuthServer] well-known endpoint should be reachable [Suite:openshift/conformance/parallel]","original-name":"[Feature:OAuthServer] well-known endpoint [Top Level] [Feature:OAuthServer] well-known endpoint should be reachable [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OAuthServer] well-known endpoint [Top Level] [Feature:OAuthServer] well-known endpoint should be reachable [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] The default cluster RBAC policy [Top Level] [Feature:OpenShiftAuthorization] The default cluster RBAC policy should have correct RBAC rules [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] The default cluster RBAC policy [Top Level] [Feature:OpenShiftAuthorization] The default cluster RBAC policy should have correct RBAC rules [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] The default cluster RBAC policy [Top Level] [Feature:OpenShiftAuthorization] The default cluster RBAC policy should have correct RBAC rules [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer [Top Level] [Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer [Top Level] [Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer [Top Level] [Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] scopes TestScopeEscalations [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopeEscalations should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] scopes TestScopeEscalations [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopeEscalations should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] scopes TestScopeEscalations [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopeEscalations should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] scopes TestScopedImpersonation [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedImpersonation should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] scopes TestScopedImpersonation [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedImpersonation should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] scopes TestScopedImpersonation [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedImpersonation should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] scopes TestUnknownScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestUnknownScopes should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] scopes TestUnknownScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestUnknownScopes should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] scopes TestUnknownScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestUnknownScopes should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeployScale [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeployScale [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeployScale [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_MultipleICTs [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_MultipleICTs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_MultipleICTs [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_configChange [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_configChange [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_configChange [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange_nonAutomatic [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange_nonAutomatic [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange_nonAutomatic [Suite:openshift/conformance/parallel]"},{"name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_manual [Suite:openshift/conformance/parallel]","original-name":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_manual [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_manual [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one related object that is not a namespace [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one related object that is not a namespace [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one related object that is not a namespace [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane operators do not make themselves unevictable [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane operators do not make themselves unevictable [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane operators do not make themselves unevictable [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane pods do not run in best-effort QoS [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane pods do not run in best-effort QoS [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane pods do not run in best-effort QoS [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have operators on the cluster version [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have operators on the cluster version [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have operators on the cluster version [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with installplans at version v1alpha1 [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with installplans at version v1alpha1 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with installplans at version v1alpha1 [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with operatorgroups at version v1 [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with operatorgroups at version v1 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with operatorgroups at version v1 [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with packagemanifests at version v1 [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with packagemanifests at version v1 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with packagemanifests at version v1 [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with subscriptions at version v1alpha1 [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with subscriptions at version v1alpha1 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with subscriptions at version v1alpha1 [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Platform][Early] Managed cluster should [Top Level] [Feature:Platform][Early] Managed cluster should start all core operators [Suite:openshift/conformance/parallel]","original-name":"[Feature:Platform][Early] Managed cluster should [Top Level] [Feature:Platform][Early] Managed cluster should start all core operators [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Platform][Early] Managed cluster should [Top Level] [Feature:Platform][Early] Managed cluster should start all core operators [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ProjectAPI]  TestProjectIsNamespace [Top Level] [Feature:ProjectAPI]  TestProjectIsNamespace should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:ProjectAPI]  TestProjectIsNamespace [Top Level] [Feature:ProjectAPI]  TestProjectIsNamespace should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ProjectAPI]  TestProjectIsNamespace [Top Level] [Feature:ProjectAPI]  TestProjectIsNamespace should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ProjectAPI]  TestProjectWatch [Top Level] [Feature:ProjectAPI]  TestProjectWatch should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:ProjectAPI]  TestProjectWatch [Top Level] [Feature:ProjectAPI]  TestProjectWatch should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ProjectAPI]  TestProjectWatch [Top Level] [Feature:ProjectAPI]  TestProjectWatch should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate [Top Level] [Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate [Top Level] [Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate [Top Level] [Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:ProjectAPI]  TestScopedProjectAccess [Top Level] [Feature:ProjectAPI]  TestScopedProjectAccess should succeed [Suite:openshift/conformance/parallel]","original-name":"[Feature:ProjectAPI]  TestScopedProjectAccess [Top Level] [Feature:ProjectAPI]  TestScopedProjectAccess should succeed [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:ProjectAPI]  TestScopedProjectAccess [Top Level] [Feature:ProjectAPI]  TestScopedProjectAccess should succeed [Suite:openshift/conformance/parallel]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel/minimal]","original-name":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel/minimal]"},{"name":"[Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]","original-name":"[Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]"},{"name":"[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC [Suite:openshift/conformance/parallel]","original-name":"[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC [Suite:openshift/conformance/parallel]"},{"name":"[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement [Suite:openshift/conformance/parallel]","original-name":"[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement [Suite:openshift/conformance/parallel]"},{"name":"[Feature:UserAPI] [Top Level] [Feature:UserAPI] users can manipulate groups [Suite:openshift/conformance/parallel]","original-name":"[Feature:UserAPI] [Top Level] [Feature:UserAPI] users can manipulate groups [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Feature:UserAPI] [Top Level] [Feature:UserAPI] users can manipulate groups [Suite:openshift/conformance/parallel]"},{"name":"[Suite:openshift/oauth/htpasswd] HTPasswd IDP [Top Level] [Suite:openshift/oauth/htpasswd] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]","original-name":"[Suite:openshift/oauth/htpasswd] HTPasswd IDP [Top Level] [Suite:openshift/oauth/htpasswd] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Suite:openshift/oauth/htpasswd] HTPasswd IDP [Top Level] [Suite:openshift/oauth/htpasswd] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"},{"name":"[Suite:openshift/oauth] LDAP [Top Level] [Suite:openshift/oauth] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]","original-name":"[Suite:openshift/oauth] LDAP [Top Level] [Suite:openshift/oauth] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[Suite:openshift/oauth] LDAP [Top Level] [Suite:openshift/oauth] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --boot=0 [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --boot=0 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --boot=0 [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --role=master --since=-2m [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --role=master --since=-2m [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --role=master --since=-2m [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=-2m --until=-1m [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=-2m --until=-1m [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=-2m --until=-1m [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --tail=5 [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --tail=5 [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --tail=5 [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]","original-name":"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc explain [Top Level] [cli] oc explain should contain proper spec+status for CRDs [Suite:openshift/conformance/parallel]","original-name":"[cli] oc explain [Top Level] [cli] oc explain should contain proper spec+status for CRDs [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc explain [Top Level] [cli] oc explain should contain proper spec+status for CRDs [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc explain [Top Level] [cli] oc explain should contain spec+status for builtinTypes [Suite:openshift/conformance/parallel]","original-name":"[cli] oc explain [Top Level] [cli] oc explain should contain spec+status for builtinTypes [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc explain [Top Level] [cli] oc explain should contain spec+status for builtinTypes [Suite:openshift/conformance/parallel]"},{"name":"[cli] oc explain networking types [Top Level] [cli] oc explain networking types should contain proper fields description for special networking types [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel]","original-name":"[cli] oc explain networking types [Top Level] [cli] oc explain networking types should contain proper fields description for special networking types [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli] oc explain networking types [Top Level] [cli] oc explain networking types should contain proper fields description for special networking types [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel]"},{"name":"[cli]oc rsh[Conformance] rsh specific flags [Top Level] [cli]oc rsh[Conformance] rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel/minimal]","original-name":"[cli]oc rsh[Conformance] rsh specific flags [Top Level] [cli]oc rsh[Conformance] rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel/minimal]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[cli]oc rsh[Conformance] rsh specific flags [Top Level] [cli]oc rsh[Conformance] rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel/minimal]"},{"name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull from private registry with secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull from private registry with secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull from private registry with secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull image [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull image [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull image [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull from private registry without secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull from private registry without secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull from private registry without secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Container Runtime blackbox test when starting a container that exits [Top Level] [k8s.io] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Container Runtime blackbox test when starting a container that exits [Top Level] [k8s.io] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Container Runtime blackbox test when starting a container that exits [Top Level] [k8s.io] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Kubelet when scheduling a busybox Pod with hostAliases [Top Level] [k8s.io] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Kubelet when scheduling a busybox Pod with hostAliases [Top Level] [k8s.io] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Kubelet when scheduling a busybox Pod with hostAliases [Top Level] [k8s.io] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Kubelet when scheduling a busybox command in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Kubelet when scheduling a busybox command in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Kubelet when scheduling a busybox command in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Kubelet when scheduling a read only busybox container [Top Level] [k8s.io] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Kubelet when scheduling a read only busybox container [Top Level] [k8s.io] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Kubelet when scheduling a read only busybox container [Top Level] [k8s.io] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] KubeletManagedEtcHosts [Top Level] [k8s.io] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] KubeletManagedEtcHosts [Top Level] [k8s.io] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] KubeletManagedEtcHosts [Top Level] [k8s.io] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Lease [Top Level] [k8s.io] Lease lease API should be available [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Lease [Top Level] [k8s.io] Lease lease API should be available [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Lease [Top Level] [k8s.io] Lease lease API should be available [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should get a host IP [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should get a host IP [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should get a host IP [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Pods [Top Level] [k8s.io] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] PrivilegedPod [NodeConformance] [Top Level] [k8s.io] PrivilegedPod [NodeConformance] should enable privileged commands [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] PrivilegedPod [NodeConformance] [Top Level] [k8s.io] PrivilegedPod [NodeConformance] should enable privileged commands [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] PrivilegedPod [NodeConformance] [Top Level] [k8s.io] PrivilegedPod [NodeConformance] should enable privileged commands [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run with an explicit root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run with an explicit root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run with an explicit root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an explicit non-root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an explicit non-root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an explicit non-root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an image specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an image specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an image specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as privileged when true [LinuxOnly] [NodeFeature:HostAccess] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as privileged when true [LinuxOnly] [NodeFeature:HostAccess] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as privileged when true [LinuxOnly] [NodeFeature:HostAccess] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] [Feature:Example] [k8s.io] Downward API [Top Level] [k8s.io] [Feature:Example] [k8s.io] Downward API should create a pod that prints his name and namespace [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [Feature:Example] [k8s.io] Downward API [Top Level] [k8s.io] [Feature:Example] [k8s.io] Downward API should create a pod that prints his name and namespace [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [Feature:Example] [k8s.io] Downward API [Top Level] [k8s.io] [Feature:Example] [k8s.io] Downward API should create a pod that prints his name and namespace [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [Feature:Example] [k8s.io] Secret [Top Level] [k8s.io] [Feature:Example] [k8s.io] Secret should create a pod that reads a secret [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [Feature:Example] [k8s.io] Secret [Top Level] [k8s.io] [Feature:Example] [k8s.io] Secret should create a pod that reads a secret [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [Feature:Example] [k8s.io] Secret [Top Level] [k8s.io] [Feature:Example] [k8s.io] Secret should create a pod that reads a secret [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status should never report success for a pending container [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status should never report success for a pending container [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status should never report success for a pending container [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] PreStop [Top Level] [k8s.io] [sig-node] PreStop should call prestop when killing a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[k8s.io] [sig-node] PreStop [Top Level] [k8s.io] [sig-node] PreStop should call prestop when killing a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] PreStop [Top Level] [k8s.io] [sig-node] PreStop should call prestop when killing a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.SupplementalGroups [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.SupplementalGroups [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.SupplementalGroups [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha runtime/default annotation [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha runtime/default annotation [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha runtime/default annotation [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp default which is unconfined [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp default which is unconfined [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp default which is unconfined [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch [Top Level] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch [Top Level] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch [Top Level] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete jobs and pods created by cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete jobs and pods created by cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete jobs and pods created by cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if deleteOptions.OrphanDependents is nil [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if deleteOptions.OrphanDependents is nil [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if deleteOptions.OrphanDependents is nil [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support orphan deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support orphan deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support orphan deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's multiple priority class scope (quota set to pod count: 2) against 2 pods with same priority classes. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's multiple priority class scope (quota set to pod count: 2) against 2 pods with same priority classes. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's multiple priority class scope (quota set to pod count: 2) against 2 pods with same priority classes. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (cpu, memory quota set) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (cpu, memory quota set) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (cpu, memory quota set) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with different priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with different priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with different priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpExists). [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpExists). [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpExists). [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpNotIn). [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpNotIn). [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpNotIn). [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with best effort scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with best effort scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with best effort scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a custom resource. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a custom resource. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a custom resource. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should fail to create secret due to empty secret key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should fail to create secret due to empty secret key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should fail to create secret due to empty secret key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Servers with support for API chunking [Top Level] [sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Servers with support for API chunking [Top Level] [sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Servers with support for API chunking [Top Level] [sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete failed finished jobs with limit of one job [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete failed finished jobs with limit of one job [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete failed finished jobs with limit of one job [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should schedule multiple jobs concurrently [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should schedule multiple jobs concurrently [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should schedule multiple jobs concurrently [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment reaping should cascade to its replica sets and pods [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment reaping should cascade to its replica sets and pods [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment reaping should cascade to its replica sets and pods [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should delete old replica sets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should delete old replica sets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should delete old replica sets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support proportional scaling [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support proportional scaling [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support proportional scaling [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, absolute =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, absolute =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, absolute =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable allow single eviction, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable allow single eviction, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable allow single eviction, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: no PDB =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: no PDB =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: no PDB =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, absolute =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, absolute =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, absolute =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should create a PodDisruptionBudget [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should create a PodDisruptionBudget [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should create a PodDisruptionBudget [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should update PodDisruptionBudget status [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should update PodDisruptionBudget status [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should update PodDisruptionBudget status [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should fail to exceed backoffLimit [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should fail to exceed backoffLimit [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should fail to exceed backoffLimit [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should fail when exceeds active deadline [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should fail when exceeds active deadline [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should fail when exceeds active deadline [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should remove pods when job is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should remove pods when job is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should remove pods when job is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should surface a failure condition on a common issue like exceeded quota [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should surface a failure condition on a common issue like exceeded quota [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should surface a failure condition on a common issue like exceeded quota [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-auth] Certificates API [Top Level] [sig-auth] Certificates API should support building a client with a CSR [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] Certificates API [Top Level] [sig-auth] Certificates API should support building a client with a CSR [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] Certificates API [Top Level] [sig-auth] Certificates API should support building a client with a CSR [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] ServiceAccounts [Top Level] [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-auth] ServiceAccounts [Top Level] [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] ServiceAccounts [Top Level] [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to create another node [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to create another node [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to create another node [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to delete another node [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to delete another node [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to delete another node [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on localhost [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl api-versions [Top Level] [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl api-versions [Top Level] [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl api-versions [Top Level] [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply apply set/view last-applied [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply apply set/view last-applied [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply apply set/view last-applied [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should apply a new configuration to an existing RC [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should apply a new configuration to an existing RC [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should apply a new configuration to an existing RC [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a CR with unknown fields for CRD with no validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a CR with unknown fields for CRD with no validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a CR with unknown fields for CRD with no validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR for CRD with validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR for CRD with validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR for CRD with validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl cluster-info dump [Top Level] [sig-cli] Kubectl client Kubectl cluster-info dump should check if cluster-info dump succeeds [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl cluster-info dump [Top Level] [sig-cli] Kubectl client Kubectl cluster-info dump should check if cluster-info dump succeeds [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl cluster-info dump [Top Level] [sig-cli] Kubectl client Kubectl cluster-info dump should check if cluster-info dump succeeds [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl copy [Top Level] [sig-cli] Kubectl client Kubectl copy should copy a file from a running Pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl copy [Top Level] [sig-cli] Kubectl client Kubectl copy should copy a file from a running Pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl copy [Top Level] [sig-cli] Kubectl client Kubectl copy should copy a file from a running Pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota with scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota with scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota with scopes [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota without scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota without scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota without scopes [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should reject quota with invalid scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should reject quota with invalid scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should reject quota with invalid scopes [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl expose [Top Level] [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl expose [Top Level] [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl expose [Top Level] [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl get componentstatuses [Top Level] [sig-cli] Kubectl client Kubectl get componentstatuses should get componentstatuses [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl get componentstatuses [Top Level] [sig-cli] Kubectl client Kubectl get componentstatuses should get componentstatuses [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl get componentstatuses [Top Level] [sig-cli] Kubectl client Kubectl get componentstatuses should get componentstatuses [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl label [Top Level] [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl label [Top Level] [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl label [Top Level] [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl patch [Top Level] [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl patch [Top Level] [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl patch [Top Level] [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl replace [Top Level] [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl replace [Top Level] [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl replace [Top Level] [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run CronJob [Top Level] [sig-cli] Kubectl client Kubectl run CronJob should create a CronJob [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run CronJob [Top Level] [sig-cli] Kubectl client Kubectl run CronJob should create a CronJob [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run CronJob [Top Level] [sig-cli] Kubectl client Kubectl run CronJob should create a CronJob [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run default [Top Level] [sig-cli] Kubectl client Kubectl run default should create an rc or deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run default [Top Level] [sig-cli] Kubectl client Kubectl run default should create an rc or deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run default [Top Level] [sig-cli] Kubectl client Kubectl run default should create an rc or deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run deployment [Top Level] [sig-cli] Kubectl client Kubectl run deployment should create a deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run deployment [Top Level] [sig-cli] Kubectl client Kubectl run deployment should create a deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run deployment [Top Level] [sig-cli] Kubectl client Kubectl run deployment should create a deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run job [Top Level] [sig-cli] Kubectl client Kubectl run job should create a job from an image when restart is OnFailure  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run job [Top Level] [sig-cli] Kubectl client Kubectl run job should create a job from an image when restart is OnFailure  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run job [Top Level] [sig-cli] Kubectl client Kubectl run job should create a job from an image when restart is OnFailure  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl run rc [Top Level] [sig-cli] Kubectl client Kubectl run rc should create an rc from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl run rc [Top Level] [sig-cli] Kubectl client Kubectl run rc should create an rc from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl run rc [Top Level] [sig-cli] Kubectl client Kubectl run rc should create an rc from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Kubectl version [Top Level] [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Kubectl version [Top Level] [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Kubectl version [Top Level] [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should return command exit codes [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should return command exit codes [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should return command exit codes [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through an HTTP proxy [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through an HTTP proxy [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through an HTTP proxy [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec using resource/name [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec using resource/name [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec using resource/name [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support inline execution and attach [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support inline execution and attach [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support inline execution and attach [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should do a rolling update of a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should do a rolling update of a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should do a rolling update of a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-instrumentation] Cadvisor [Top Level] [sig-instrumentation] Cadvisor should be healthy on every node. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-instrumentation] Cadvisor [Top Level] [sig-instrumentation] Cadvisor should be healthy on every node. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-instrumentation] Cadvisor [Top Level] [sig-instrumentation] Cadvisor should be healthy on every node. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from API server. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from API server. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from API server. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a ControllerManager. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a ControllerManager. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a ControllerManager. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Scheduler. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Scheduler. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Scheduler. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should allow pods to hairpin back to themselves through services [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should allow pods to hairpin back to themselves through services [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should allow pods to hairpin back to themselves through services [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should update ConfigMap successfully [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should update ConfigMap successfully [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should update ConfigMap successfully [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP and pod IP as an env var if pod uses host network [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP and pod IP as an env var if pod uses host network [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP and pod IP as an env var if pod uses host network [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-scheduling] LimitRange [Top Level] [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-scheduling] LimitRange [Top Level] [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-scheduling] LimitRange [Top Level] [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs) [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs) [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs) [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] GCP Volumes NFSv3 [Top Level] [sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] GCP Volumes NFSv3 [Top Level] [sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] GCP Volumes NFSv3 [Top Level] [sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support r/w [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support r/w [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support r/w [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify \"immediate\" deletion of a PV that is not bound to a PVC [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify \"immediate\" deletion of a PV that is not bound to a PVC [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify \"immediate\" deletion of a PV that is not bound to a PVC [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeSelector [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeSelector [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":9,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":6,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeSelector [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-storage] Volumes ConfigMap [Top Level] [sig-storage] Volumes ConfigMap should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-storage] Volumes ConfigMap [Top Level] [sig-storage] Volumes ConfigMap should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"[sig-storage] Volumes ConfigMap [Top Level] [sig-storage] Volumes ConfigMap should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"etcd [Top Level] etcd leader changes are not excessive [Suite:openshift/conformance/parallel]","original-name":"etcd [Top Level] etcd leader changes are not excessive [Suite:openshift/conformance/parallel]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":3,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":3,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":4,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":6,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":4,"value":0},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":3,"value":0}],"target":"etcd [Top Level] etcd leader changes are not excessive [Suite:openshift/conformance/parallel]"},{"name":"operator.Find all of the input images from ocp/4.4:${component} and tag them into the output image stream","original-name":"operator.Find all of the input images from ocp/4.4:${component} and tag them into the output image stream","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":26,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":16,"value":1},{"count":1,"value":0},{"count":30,"value":1},{"count":1,"value":0},{"count":74,"value":1}],"target":"operator"},{"name":"operator.Run template e2e-ovirt - e2e-ovirt container teardown","original-name":"operator.Run template e2e-ovirt - e2e-ovirt container teardown","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":26,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":0},{"count":16,"value":1},{"count":1,"value":0},{"count":30,"value":1},{"count":1,"value":0},{"count":7,"value":1},{"count":2,"value":0},{"count":65,"value":1}],"target":"operator"}],"row_ids":["operator.Run template e2e-ovirt - e2e-ovirt container test","Overall","operator.Run template e2e-ovirt - e2e-ovirt container setup","Monitor cluster while tests execute","[k8s.io] [sig-node] Events [Top Level] [k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be rejected when no endpoints exist [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel/minimal]","[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have no crashlooping pods in core namespaces over two minutes [Suite:openshift/conformance/parallel]","[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","job.initialize","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel/minimal]","[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM can subscribe to the etcd operator [Suite:openshift/conformance/parallel]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Pod Disks [Top Level] [sig-storage] Pod Disks should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]","operator.Create the release image containing all images built by this job","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel/minimal]","[sig-cli] Kubectl client Kubectl logs [Top Level] [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel/minimal]","[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]","[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel/minimal]","[image_ecosystem][mongodb] openshift mongodb image  creating from a template [Top Level] [image_ecosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]","[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]","[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]","[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]","[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]","[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel/minimal]","[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]","[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]","[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]","[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]","[Area:Networking] network isolation when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]","[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on a different node via a service IP [Suite:openshift/conformance/parallel]","[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on the same node via a service IP [Suite:openshift/conformance/parallel]","[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]","[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]","[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]","[Area:Networking][endpoints] admission [Top Level] [Area:Networking][endpoints] admission TestEndpointAdmission [Suite:openshift/conformance/parallel]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel/minimal]","[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplate [Suite:openshift/conformance/parallel/minimal]","[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplateTransformationFromConfig [Suite:openshift/conformance/parallel/minimal]","[Conformance][templates] templateinstance creation with invalid object reports error  [Top Level] [Conformance][templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel/minimal]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound should succeed [Suite:openshift/conformance/parallel]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project should succeed [Suite:openshift/conformance/parallel]","[Feature:APIServer] [Top Level] [Feature:APIServer] TestTLSDefaults [Suite:openshift/conformance/parallel]","[Feature:AnnotationTrigger] Annotation trigger [Top Level] [Feature:AnnotationTrigger] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]","[Feature:Builds] Multi-stage image builds  [Top Level] [Feature:Builds] Multi-stage image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig [Top Level] [Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel/minimal]","[Feature:ClusterResourceQuota]  TestClusterQuota [Top Level] [Feature:ClusterResourceQuota]  TestClusterQuota should succeed [Suite:openshift/conformance/parallel]","[Feature:DeploymentConfig] deploymentconfigs paused [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs paused [Conformance] should disable actions on deployments [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] should rollback to an older deployment [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] resolve the image pull spec [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] should successfully tag the deployed image [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] should run the custom deployment steps [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] should expand the config map key to a value [Suite:openshift/conformance/parallel/minimal]","[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [Suite:openshift/conformance/parallel/minimal]","[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel/minimal]","[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should change image reference for internal images [Suite:openshift/conformance/parallel]","[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should preserve image reference for external images [Suite:openshift/conformance/parallel]","[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestMultipleImageChangeBuildTriggers [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage [Top Level] [Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] scopes TestScopedTokens [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange [Suite:openshift/conformance/parallel]","[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one namespace in their lists of related objects [Suite:openshift/conformance/parallel]","[Feature:Platform] Managed cluster [Top Level] [Feature:Platform] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]","[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should should expose cluster services outside the cluster [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with catalogsources at version v1alpha1 [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with clusterserviceversions at version v1alpha1 [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Suite:openshift/conformance/parallel]","[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM Report Upgradeable in OLM ClusterOperators status [Suite:openshift/conformance/parallel]","[Feature:ProjectAPI]  TestInvalidRoleRefs [Top Level] [Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [Suite:openshift/conformance/parallel]","[Feature:ProjectAPI]  [Top Level] [Feature:ProjectAPI]  TestUnprivilegedNewProject [Suite:openshift/conformance/parallel]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]","[Feature:UserAPI] [Top Level] [Feature:UserAPI] groups should work [Suite:openshift/conformance/parallel]","[Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation [Top Level] [Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation additionalCORSAllowedOrigins [Suite:openshift/conformance/parallel]","[Suite:openshift/oauth] LDAP IDP [Top Level] [Suite:openshift/oauth] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=\u003cexplicit-date\u003e --until=-1m [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --unit=kubelet --since=-1m [Suite:openshift/conformance/parallel]","[cli] oc explain [Top Level] [cli] oc explain should contain proper fields description for special types [Suite:openshift/conformance/parallel]","[job][Conformance] openshift can execute jobs controller [Top Level] [job][Conformance] openshift can execute jobs controller should create and run a job in user project [Suite:openshift/conformance/parallel/minimal]","[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] GKE local SSD [Feature:GKELocalSSD] [Top Level] [k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] GKE node pools [Feature:GKENodePool] [Top Level] [k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a non-local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [Feature:Example] [k8s.io] Liveness [Top Level] [k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Mount propagation [Top Level] [k8s.io] [sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] crictl [Top Level] [k8s.io] [sig-node] crictl should be able to run crictl on the node [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Aggregator [Top Level] [sig-api-machinery] Aggregator Should be able to support the 1.10 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Discovery [Top Level] [sig-api-machinery] Discovery Custom resource should have storage version hash [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support cascading deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return pod details [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json,application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf,application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete successful finished jobs with limit of one successful job [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] CronJob [Top Level] [sig-apps] CronJob should not emit unexpected warnings [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] CronJob [Top Level] [sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] CronJob [Top Level] [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support rollover [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should delete a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks succeed [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-auth] PodSecurityPolicy [Top Level] [sig-auth] PodSecurityPolicy should enforce the restricted policy.PodSecurityPolicy [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl rolling-update [Top Level] [sig-cli] Kubectl client Kubectl rolling-update should support rolling-update to same image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run --rm job [Top Level] [sig-cli] Kubectl client Kubectl run --rm job should create a job from an image, then delete the job  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run pod [Top Level] [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client kubectl get output [Top Level] [sig-cli] Kubectl client kubectl get output should contain custom columns for each resource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] Downward API [Top Level] [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] [Top Level] [sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-service-catalog] [Feature:PodPreset] PodPreset [Top Level] [sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner [Top Level] [sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] EmptyDir wrapper volumes [Top Level] [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] GCP Volumes GlusterFS [Top Level] [sig-storage] GCP Volumes GlusterFS should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] GCP Volumes NFSv4 [Top Level] [sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support subPath [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy [Top Level] [sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes:vsphere [Top Level] [sig-storage] PersistentVolumes:vsphere should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected combined [Top Level] [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Volume Disk Size [Feature:vsphere] [Top Level] [sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv has size rounded up correctly [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Volume limits [Top Level] [sig-storage] Volume limits should verify that all nodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if only datastore is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if the availability zone specified in the storage class have no shared datastores under it. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with compatible policy and datastore without any zones specified in the storage class fails (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible datastore and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible storage policy along with compatible zone and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with multiple allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in the storage class. (No shared datastores exist among both zones) [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones, datastore and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created on a non-Workspace zone and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify dynamically created pv with multiple zones specified in the storage class, shows both the zones on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] vsphere statefulset [Top Level] [sig-storage] vsphere statefulset vsphere statefulset testing [Suite:openshift/conformance/parallel] [Suite:k8s]","node client cert requests armoring: [Top Level] node client cert requests armoring: deny pod's access to /config/master API endpoint [Suite:openshift/conformance/parallel]","node client cert requests armoring: [Top Level] node client cert requests armoring: node-approver SA token compromised, don't approve random CSRs with client auth [Suite:openshift/conformance/parallel]","operator.Run template e2e-ovirt - e2e-ovirt container lease","[Area:Networking] Internal connectivity [Top Level] [Area:Networking] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]","[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel/minimal]","[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel/minimal]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users should succeed [Suite:openshift/conformance/parallel]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR should succeed [Suite:openshift/conformance/parallel]","[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions should succeed [Suite:openshift/conformance/parallel]","[Feature:APIServer] [Top Level] [Feature:APIServer] anonymous browsers should get a 403 from / [Suite:openshift/conformance/parallel]","[Feature:APIServer] [Top Level] [Feature:APIServer] authenticated browser should get a 200 from / [Suite:openshift/conformance/parallel]","[Feature:Authentication]  TestFrontProxy [Top Level] [Feature:Authentication]  TestFrontProxy should succeed [Suite:openshift/conformance/parallel]","[Feature:Builds] Optimized image builds  [Top Level] [Feature:Builds] Optimized image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds] build have source revision metadata  started build [Top Level] [Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]","[Feature:Builds] build with empty source  started build [Top Level] [Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]","[Feature:Builds] buildconfig secret injector  [Top Level] [Feature:Builds] buildconfig secret injector  should inject secrets to the appropriate buildconfigs [Suite:openshift/conformance/parallel]","[Feature:Builds] result image should have proper labels set  Docker build from a template [Top Level] [Feature:Builds] result image should have proper labels set  Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]","[Feature:Builds] result image should have proper labels set  S2I build from a template [Top Level] [Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]","[Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build [Top Level] [Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a docker template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] custom build with buildah  being created from new-build [Top Level] [Feature:Builds][Conformance] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] imagechangetriggers  [Top Level] [Feature:Builds][Conformance] imagechangetriggers  imagechangetriggers should trigger builds of all types [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] s2i build with a quota  Building from a template [Top Level] [Feature:Builds][Conformance] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][Conformance] s2i build with a root user image [Top Level] [Feature:Builds][Conformance] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template [Top Level] [Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Suite:openshift/conformance/parallel/minimal]","[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for docker [Suite:openshift/conformance/parallel]","[Feature:Builds][timing] capture build stages and durations  [Top Level] [Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]","[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhook [Suite:openshift/conformance/parallel]","[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPing [Suite:openshift/conformance/parallel]","[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImage [Suite:openshift/conformance/parallel]","[Feature:Builds][webhook] [Top Level] [Feature:Builds][webhook] TestWebhookGitHubPushWithImageStream [Suite:openshift/conformance/parallel]","[Feature:CLI] CLI [Top Level] [Feature:CLI] CLI can run inside of a busybox container [Suite:openshift/conformance/parallel]","[Feature:DeploymentConfig] deploymentconfigs  [Top Level] [Feature:DeploymentConfig] deploymentconfigs  should adhere to Three Laws of Controllers [Conformance] [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs generation [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs generation [Conformance] should deploy based on a status version bump [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] should let the deployment config with a NewReplicationControllerCreated reason [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs initially [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs initially [Conformance] should not deploy if pods never transition to ready [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation after deployer pod succeeded [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with cancellation of running deployment [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid [Conformance] should deal with config change in case the deployment is still running [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs viewing rollout history [Conformance] should print the rollout history [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when changing image change trigger [Conformance] should successfully trigger from an updated image [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should immediately start a new deployment [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should only deploy the last deployment [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with enhanced status [Conformance] should include various info in status [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with failing hook [Conformance] should get all logs from retried hooks [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with revision history limits [Conformance] should never persist more old deployments than acceptable after being observed by the controller [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with test deployments [Conformance] should run a deployment to completion and then scale to zero [Suite:openshift/conformance/parallel/minimal]","[Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images [Conformance] when patched with empty image [Suite:openshift/conformance/parallel/minimal]","[Feature:ImageAppend] Image append [Top Level] [Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]","[Feature:ImageExtract] Image extract [Top Level] [Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]","[Feature:ImageInfo] Image info [Top Level] [Feature:ImageInfo] Image info should display information about images [Suite:openshift/conformance/parallel]","[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should identify a deleted image as missing [Suite:openshift/conformance/parallel]","[Feature:ImageLayers][registry] Image layer subresource [Top Level] [Feature:ImageLayers][registry] Image layer subresource should return layers from tagged images [Suite:openshift/conformance/parallel]","[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the object has the resolve-names annotation [Suite:openshift/conformance/parallel/minimal]","[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageAddSignature [Suite:openshift/conformance/parallel]","[Feature:Image] signature [Top Level] [Feature:Image] signature TestImageRemoveSignature [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustom [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustomWithConfigChange [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDocker [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDockerWithConfigChange [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTI [Suite:openshift/conformance/parallel]","[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTIWithConfigChange [Suite:openshift/conformance/parallel]","[Feature:Machines] Managed cluster should [Top Level] [Feature:Machines] Managed cluster should have machine resources [Suite:openshift/conformance/parallel]","[Feature:Marketplace] Marketplace diff name test [Top Level] [Feature:Marketplace] Marketplace diff name test [ocp-25672] create the samename opsrc\u0026csc [Suite:openshift/conformance/parallel]","[Feature:Marketplace] Marketplace resources with labels provider displayName [Top Level] [Feature:Marketplace] Marketplace resources with labels provider displayName [ocp-21728]create opsrc with labels [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server should use http1.1 only to prevent http2 connection reuse [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]","[Feature:OAuthServer] well-known endpoint [Top Level] [Feature:OAuthServer] well-known endpoint should be reachable [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] The default cluster RBAC policy [Top Level] [Feature:OpenShiftAuthorization] The default cluster RBAC policy should have correct RBAC rules [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup [Top Level] [Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer [Top Level] [Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] scopes TestScopeEscalations [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopeEscalations should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] scopes TestScopedImpersonation [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedImpersonation should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] scopes TestUnknownScopes [Top Level] [Feature:OpenShiftAuthorization] scopes TestUnknownScopes should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace [Top Level] [Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace should succeed [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeployScale [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_MultipleICTs [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_configChange [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange_nonAutomatic [Suite:openshift/conformance/parallel]","[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_manual [Suite:openshift/conformance/parallel]","[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one related object that is not a namespace [Suite:openshift/conformance/parallel]","[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane operators do not make themselves unevictable [Suite:openshift/conformance/parallel]","[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should ensure control plane pods do not run in best-effort QoS [Suite:openshift/conformance/parallel]","[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have operators on the cluster version [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with installplans at version v1alpha1 [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with operatorgroups at version v1 [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with packagemanifests at version v1 [Suite:openshift/conformance/parallel]","[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with subscriptions at version v1alpha1 [Suite:openshift/conformance/parallel]","[Feature:Platform][Early] Managed cluster should [Top Level] [Feature:Platform][Early] Managed cluster should start all core operators [Suite:openshift/conformance/parallel]","[Feature:ProjectAPI]  TestProjectIsNamespace [Top Level] [Feature:ProjectAPI]  TestProjectIsNamespace should succeed [Suite:openshift/conformance/parallel]","[Feature:ProjectAPI]  TestProjectWatch [Top Level] [Feature:ProjectAPI]  TestProjectWatch should succeed [Suite:openshift/conformance/parallel]","[Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate [Top Level] [Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate should succeed [Suite:openshift/conformance/parallel]","[Feature:ProjectAPI]  TestScopedProjectAccess [Top Level] [Feature:ProjectAPI]  TestScopedProjectAccess should succeed [Suite:openshift/conformance/parallel]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel/minimal]","[Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]","[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC [Suite:openshift/conformance/parallel]","[Feature:SecurityContextConstraints]  [Top Level] [Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement [Suite:openshift/conformance/parallel]","[Feature:UserAPI] [Top Level] [Feature:UserAPI] users can manipulate groups [Suite:openshift/conformance/parallel]","[Suite:openshift/oauth/htpasswd] HTPasswd IDP [Top Level] [Suite:openshift/oauth/htpasswd] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]","[Suite:openshift/oauth] LDAP [Top Level] [Suite:openshift/oauth] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --boot=0 [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --role=master --since=-2m [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=-2m --until=-1m [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --tail=5 [Suite:openshift/conformance/parallel]","[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs [Suite:openshift/conformance/parallel]","[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]","[cli] oc explain [Top Level] [cli] oc explain should contain proper spec+status for CRDs [Suite:openshift/conformance/parallel]","[cli] oc explain [Top Level] [cli] oc explain should contain spec+status for builtinTypes [Suite:openshift/conformance/parallel]","[cli] oc explain networking types [Top Level] [cli] oc explain networking types should contain proper fields description for special networking types [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel]","[cli]oc rsh[Conformance] rsh specific flags [Top Level] [cli]oc rsh[Conformance] rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel/minimal]","[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull from private registry with secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull image [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull from private registry without secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Container Runtime blackbox test when starting a container that exits [Top Level] [k8s.io] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Kubelet when scheduling a busybox Pod with hostAliases [Top Level] [k8s.io] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Kubelet when scheduling a busybox command in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Kubelet when scheduling a read only busybox container [Top Level] [k8s.io] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] KubeletManagedEtcHosts [Top Level] [k8s.io] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Lease [Top Level] [k8s.io] Lease lease API should be available [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should get a host IP [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Pods [Top Level] [k8s.io] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] PrivilegedPod [NodeConformance] [Top Level] [k8s.io] PrivilegedPod [NodeConformance] should enable privileged commands [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run with an explicit root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an explicit non-root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should run with an image specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as privileged when true [LinuxOnly] [NodeFeature:HostAccess] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Security Context When creating a pod with privileged [Top Level] [k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] [Feature:Example] [k8s.io] Downward API [Top Level] [k8s.io] [Feature:Example] [k8s.io] Downward API should create a pod that prints his name and namespace [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [Feature:Example] [k8s.io] Secret [Top Level] [k8s.io] [Feature:Example] [k8s.io] Secret should create a pod that reads a secret [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status should never report success for a pending container [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] [sig-node] PreStop [Top Level] [k8s.io] [sig-node] PreStop should call prestop when killing a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.SupplementalGroups [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha runtime/default annotation [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp default which is unconfined [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch [Top Level] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete jobs and pods created by cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan pods created by rc if deleteOptions.OrphanDependents is nil [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support orphan deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's multiple priority class scope (quota set to pod count: 2) against 2 pods with same priority classes. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (cpu, memory quota set) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with different priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpExists). [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpNotIn). [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:PodPriority] [Top Level] [sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with best effort scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a custom resource. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Secrets [Top Level] [sig-api-machinery] Secrets should fail to create secret due to empty secret key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Servers with support for API chunking [Top Level] [sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete failed finished jobs with limit of one job [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] CronJob [Top Level] [sig-apps] CronJob should schedule multiple jobs concurrently [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment reaping should cascade to its replica sets and pods [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should delete old replica sets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support proportional scaling [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, absolute =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable allow single eviction, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: no PDB =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, absolute =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should create a PodDisruptionBudget [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController should update PodDisruptionBudget status [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should fail to exceed backoffLimit [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should fail when exceeds active deadline [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should remove pods when job is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should surface a failure condition on a common issue like exceeded quota [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-auth] Certificates API [Top Level] [sig-auth] Certificates API should support building a client with a CSR [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] ServiceAccounts [Top Level] [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to create another node [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to delete another node [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on localhost [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl api-versions [Top Level] [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply apply set/view last-applied [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should apply a new configuration to an existing RC [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a CR with unknown fields for CRD with no validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR for CRD with validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl client-side validation [Top Level] [sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl cluster-info dump [Top Level] [sig-cli] Kubectl client Kubectl cluster-info dump should check if cluster-info dump succeeds [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl copy [Top Level] [sig-cli] Kubectl client Kubectl copy should copy a file from a running Pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota with scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should create a quota without scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl create quota [Top Level] [sig-cli] Kubectl client Kubectl create quota should reject quota with invalid scopes [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl expose [Top Level] [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl get componentstatuses [Top Level] [sig-cli] Kubectl client Kubectl get componentstatuses should get componentstatuses [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl label [Top Level] [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl patch [Top Level] [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl replace [Top Level] [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run CronJob [Top Level] [sig-cli] Kubectl client Kubectl run CronJob should create a CronJob [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run default [Top Level] [sig-cli] Kubectl client Kubectl run default should create an rc or deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run deployment [Top Level] [sig-cli] Kubectl client Kubectl run deployment should create a deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run job [Top Level] [sig-cli] Kubectl client Kubectl run job should create a job from an image when restart is OnFailure  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl run rc [Top Level] [sig-cli] Kubectl client Kubectl run rc should create an rc from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Kubectl version [Top Level] [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should return command exit codes [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through an HTTP proxy [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec using resource/name [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support inline execution and attach [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should do a rolling update of a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-cli] Kubectl client Update Demo [Top Level] [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-instrumentation] Cadvisor [Top Level] [sig-instrumentation] Cadvisor should be healthy on every node. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from API server. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a ControllerManager. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-instrumentation] MetricsGrabber [Top Level] [sig-instrumentation] MetricsGrabber should grab all metrics from a Scheduler. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should allow pods to hairpin back to themselves through services [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] ConfigMap [Top Level] [sig-node] ConfigMap should update ConfigMap successfully [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-node] Downward API [Top Level] [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP and pod IP as an env var if pod uses host network [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-node] Downward API [Top Level] [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-node] Downward API [Top Level] [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-scheduling] LimitRange [Top Level] [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI Volume expansion [Top Level] [sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs) [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] GCP Volumes NFSv3 [Top Level] [sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] HostPath [Top Level] [sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support r/w [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify \"immediate\" deletion of a PV that is not bound to a PVC [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs [Top Level] [sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns [Top Level] [sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeSelector [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-storage] Volumes ConfigMap [Top Level] [sig-storage] Volumes ConfigMap should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]","etcd [Top Level] etcd leader changes are not excessive [Suite:openshift/conformance/parallel]","operator.Find all of the input images from ocp/4.4:${component} and tag them into the output image stream","operator.Run template e2e-ovirt - e2e-ovirt container teardown"],"timestamps":[1588645648000,1588645579000,1588623954000,1588603852000,1588591881000,1588570221000,1588548559000,1588526899000,1588505246000,1588483579000,1588461920000,1588440262000,1588418598000,1588396940000,1588375330000,1588354748000,1588343650000,1588323930000,1588302278000,1588280627000,1588259030000,1588245522000,1588223933000,1588209022000,1588187297000,1588176700000,1588156871000,1588135211000,1588113609000,1588106163000,1588103351000,1588081686000,1588060123000,1588038389000,1588016705000,1587995043000,1587973446000,1587951803000,1587935167000,1587923104000,1587901478000,1587885064000,1587877490000,1587864065000,1587842411000,1587824729000,1587823274000,1587821031000,1587810639000,1587795516000,1587787538000,1587782002000,1587774305000,1587767982000,1587763482000,1587759740000,1587754724000,1587753067000,1587742455000,1587738577000,1587736776000,1587731320000,1587722315000,1587710375000,1587700746000,1587687607000,1587682266000,1587670156000,1587652952000,1587631226000,1587616514000,1587607007000,1587602099000,1587592784000,1587586221000,1587584205000,1587574639000,1587572777000,1587568943000,1587564032000,1587546943000,1587525270000,1587503669000,1587490505000,1587483489000,1587476403000,1587460071000,1587456500000,1587440786000,1587423129000,1587419233000,1587411809000,1587390195000,1587379830000,1587360174000,1587358548000,1587345060000,1587343307000,1587334155000,1587312496000,1587290837000,1587269176000,1587247522000,1587225866000,1587204195000,1587198629000,1587177019000,1587155410000,1587153559000,1587150441000,1587128841000,1587125524000,1587121095000,1587099181000,1587095126000,1587078838000,1587070906000,1587069258000,1587054588000,1587051609000,1587047922000,1587030568000,1587028999000,1587027042000,1587019378000,1587004136000,1586986375000,1586984283000,1586984131000,1586977539000,1586964744000,1586961864000,1586944932000,1586940146000,1586935317000,1586927985000,1586919754000,1586914217000,1586903397000,1586901622000,1586899785000,1586892612000,1586891439000,1586889102000,1586884813000,1586876358000,1586874595000,1586864557000,1586778174000,1586776826000,1586737203000,1586665565000,1586579131000],"clusters":[{"test_status":12,"message":"","area":1372,"test_results":{"Monitor cluster while tests execute":[1,130,132,5,6,136,9,139,13,144,145,146,147,20,149,22,24,29,133,32,34,37,39,42,44,51,52,54,57,59,60,134,63,76,83,88,89,90,92,93,95,97,102,104,105,108,115,116,117,121,122,124,125,126,127],"Overall":[0,1,2,3,15,18,19,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,52,53,57,60,61,64,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,83,84,85,86,87,89,91,93,97,98,99,100,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,128,131,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' [Top Level] [Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] network isolation when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] network isolation when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on a different node via a service IP [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] services basic functionality [Top Level] [Area:Networking] services basic functionality should allow connections to another pod on the same node via a service IP [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] services when using a plugin that does not isolate namespaces by default [Top Level] [Area:Networking] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]":[126],"[Area:Networking] services when using a plugin that isolates namespaces by default [Top Level] [Area:Networking] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]":[126],"[Area:Networking][endpoints] admission [Top Level] [Area:Networking][endpoints] admission TestEndpointAdmission [Suite:openshift/conformance/parallel]":[126],"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][Area:Networking][Feature:Router] The HAProxy router [Top Level] [Conformance][Area:Networking][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplate [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][templates] template-api [Top Level] [Conformance][templates] template-api TestTemplateTransformationFromConfig [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][templates] templateinstance creation with invalid object reports error  [Top Level] [Conformance][templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel/minimal]":[126],"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel/minimal]":[120,126,119],"[Conformance][templates] templateinstance readiness test  [Top Level] [Conformance][templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel/minimal]":[120,126,119],"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project [Top Level] [Feature: RoleBinding Restrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:APIServer] [Top Level] [Feature:APIServer] TestTLSDefaults [Suite:openshift/conformance/parallel]":[126],"[Feature:AnnotationTrigger] Annotation trigger [Top Level] [Feature:AnnotationTrigger] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]":[126],"[Feature:Builds] Multi-stage image builds  [Top Level] [Feature:Builds] Multi-stage image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]":[120,126],"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]":[120],"[Feature:Builds] forcePull should affect pulling builder images  [Top Level] [Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]":[120],"[Feature:Builds][Conformance] build without output image  building from templates [Top Level] [Feature:Builds][Conformance] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]":[120,119],"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel/minimal]":[120,119],"[Feature:Builds][Conformance] oc new-app  [Top Level] [Feature:Builds][Conformance] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel/minimal]":[120,126,119],"[Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig [Top Level] [Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]":[120,119],"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]":[120,119],"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel/minimal]":[120,119],"[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  [Top Level] [Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel/minimal]":[120,126,119],"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]":[120,126,119],"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]":[120,126],"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]":[120,126,119],"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]":[120,119],"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]":[120,119],"[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Top Level] [Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]":[120,119],"[Feature:ClusterResourceQuota]  TestClusterQuota [Top Level] [Feature:ClusterResourceQuota]  TestClusterQuota should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs adoption [Conformance] will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel/minimal]":[14,126,119],"[Feature:DeploymentConfig] deploymentconfigs paused [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs paused [Conformance] should disable actions on deployments [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs rolled back [Conformance] should rollback to an older deployment [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] resolve the image pull spec [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] should successfully tag the deployed image [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with custom deployments [Conformance] should run the custom deployment steps [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] should expand the config map key to a value [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel/minimal]":[120],"[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] [Top Level] [Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel/minimal]":[120,119],"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:ImageLookup][registry][Conformance] Image policy [Top Level] [Feature:ImageLookup][registry][Conformance] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should change image reference for internal images [Suite:openshift/conformance/parallel]":[126],"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should preserve image reference for external images [Suite:openshift/conformance/parallel]":[126],"[Feature:Image] oc tag [Top Level] [Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]":[126],"[Feature:Image][triggers] Image change build triggers [Top Level] [Feature:Image][triggers] Image change build triggers TestMultipleImageChangeBuildTriggers [Suite:openshift/conformance/parallel]":[126],"[Feature:OAuthServer] OAuth server [Top Level] [Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [Suite:openshift/conformance/parallel]":[126],"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]":[126],"[Feature:OAuthServer] [Headers] expected headers returned from the [Top Level] [Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]":[126],"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]":[126],"[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly [Top Level] [Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint [Top Level] [Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage [Top Level] [Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftAuthorization] scopes TestScopedTokens [Top Level] [Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [Suite:openshift/conformance/parallel]":[126],"[Feature:OpenShiftControllerManager] [Top Level] [Feature:OpenShiftControllerManager] TestTriggers_imageChange [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] ClusterOperators should define [Top Level] [Feature:Platform] ClusterOperators should define at least one namespace in their lists of related objects [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] Managed cluster [Top Level] [Feature:Platform] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should have no crashlooping pods in core namespaces over two minutes [Suite:openshift/conformance/parallel]":[71,139,108,145,19,117,124],"[Feature:Platform] Managed cluster should [Top Level] [Feature:Platform] Managed cluster should should expose cluster services outside the cluster [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with catalogsources at version v1alpha1 [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should be installed with clusterserviceversions at version v1alpha1 [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] OLM should [Top Level] [Feature:Platform] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM Report Upgradeable in OLM ClusterOperators status [Suite:openshift/conformance/parallel]":[126],"[Feature:Platform] an end user use OLM [Top Level] [Feature:Platform] an end user use OLM can subscribe to the etcd operator [Suite:openshift/conformance/parallel]":[33,89],"[Feature:ProjectAPI]  TestInvalidRoleRefs [Top Level] [Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [Suite:openshift/conformance/parallel]":[126],"[Feature:ProjectAPI]  [Top Level] [Feature:ProjectAPI]  TestUnprivilegedNewProject [Suite:openshift/conformance/parallel]":[126],"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel/minimal]":[126],"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel/minimal]":[93],"[Feature:Prometheus][Conformance] Prometheus when installed on the cluster [Top Level] [Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel/minimal]":[24,139,71],"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]":[126],"[Feature:Prometheus][Late] Alerts [Top Level] [Feature:Prometheus][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]":[6,71,105,139,108,117,24,57,122,126],"[Feature:UserAPI] [Top Level] [Feature:UserAPI] groups should work [Suite:openshift/conformance/parallel]":[126],"[Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation [Top Level] [Suite:openshift/crdvalidation/apiserver] APIServer CR fields validation additionalCORSAllowedOrigins [Suite:openshift/conformance/parallel]":[126],"[Suite:openshift/oauth] LDAP IDP [Top Level] [Suite:openshift/oauth] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]":[126],"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --since=\u003cexplicit-date\u003e --until=-1m [Suite:openshift/conformance/parallel]":[126],"[cli] oc adm [Top Level] [cli] oc adm oc adm node-logs --unit=kubelet --since=-1m [Suite:openshift/conformance/parallel]":[126],"[cli] oc adm must-gather [Top Level] [cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]":[29,126],"[cli] oc explain [Top Level] [cli] oc explain should contain proper fields description for special types [Suite:openshift/conformance/parallel]":[126],"[image_ecosystem][mongodb] openshift mongodb image  creating from a template [Top Level] [image_ecosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]":[120,119],"[job][Conformance] openshift can execute jobs controller [Top Level] [job][Conformance] openshift can execute jobs controller should create and run a job in user project [Suite:openshift/conformance/parallel/minimal]":[126],"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook [Top Level] [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Container Runtime blackbox test on terminated container [Top Level] [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Container Runtime blackbox test when running a container with a new image [Top Level] [k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Docker Containers [Top Level] [k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] GKE local SSD [Feature:GKELocalSSD] [Top Level] [k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] GKE node pools [Feature:GKENodePool] [Top Level] [k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] InitContainer [NodeConformance] [Top Level] [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod [Top Level] [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Pods [Top Level] [k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Pods [Top Level] [k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a non-local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container should be restarted with a local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Probing container [Top Level] [k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Security Context When creating a container with runAsNonRoot [Top Level] [k8s.io] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Security Context When creating a container with runAsUser [Top Level] [k8s.io] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem [Top Level] [k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation [Top Level] [k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[k8s.io] Variable Expansion [Top Level] [k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] [Feature:Example] [k8s.io] Liveness [Top Level] [k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] [sig-node] Events [Top Level] [k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[1,131,5,6,9,139,13,14,144,147,20,149,22,25,29,33,134,39,42,44,51,53,137,57,63,75,71,55,82,88,92,93,102,105,108,116,117,119,125,126],"[k8s.io] [sig-node] Mount propagation [Top Level] [k8s.io] [sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period [Top Level] [k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[19,116],"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] [sig-node] Security Context [Top Level] [k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[k8s.io] [sig-node] crictl [Top Level] [k8s.io] [sig-node] crictl should be able to run crictl on the node [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Aggregator [Top Level] [sig-api-machinery] Aggregator Should be able to support the 1.10 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] [Top Level] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Discovery [Top Level] [sig-api-machinery] Discovery Custom resource should have storage version hash [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Garbage collector [Top Level] [sig-api-machinery] Garbage collector should support cascading deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] Generated clientset [Top Level] [sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] [Top Level] [sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] ResourceQuota [Top Level] [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Servers with support for Table transformation [Top Level] [sig-api-machinery] Servers with support for Table transformation should return pod details [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] Watchers [Top Level] [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json,application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-api-machinery] client-go should negotiate [Top Level] [sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf,application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should delete successful finished jobs with limit of one successful job [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should not emit unexpected warnings [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] CronJob [Top Level] [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] Deployment [Top Level] [sig-apps] Deployment deployment should support rollover [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-apps] Deployment [Top Level] [sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] Deployment [Top Level] [sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] DisruptionController [Top Level] [sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] Job [Top Level] [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-apps] Job [Top Level] [sig-apps] Job should delete a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-apps] Job [Top Level] [sig-apps] Job should run a job to completion when tasks succeed [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] ReplicaSet [Top Level] [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-apps] ReplicationController [Top Level] [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] [Top Level] [sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-auth] PodSecurityPolicy [Top Level] [sig-auth] PodSecurityPolicy should enforce the restricted policy.PodSecurityPolicy [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-auth] [Feature:NodeAuthenticator] [Top Level] [sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-auth] [Feature:NodeAuthorizer] [Top Level] [sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request [Top Level] [sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl client Kubectl apply [Top Level] [sig-cli] Kubectl client Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl client Kubectl describe [Top Level] [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-cli] Kubectl client Kubectl logs [Top Level] [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[93,126],"[sig-cli] Kubectl client Kubectl rolling-update [Top Level] [sig-cli] Kubectl client Kubectl rolling-update should support rolling-update to same image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-cli] Kubectl client Kubectl run --rm job [Top Level] [sig-cli] Kubectl client Kubectl run --rm job should create a job from an image, then delete the job  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-cli] Kubectl client Kubectl run pod [Top Level] [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-cli] Kubectl client Proxy server [Top Level] [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl client Simple pod [Top Level] [sig-cli] Kubectl client Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-cli] Kubectl client kubectl get output [Top Level] [sig-cli] Kubectl client kubectl get output should contain custom columns for each resource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]":[131,6,135,9,10,12,14,144,145,19,24,32,34,37,39,44,46,51,53,58,60,69,82,89,96,99,101,103,104,147,121,122,125,126],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]":[128,1,5,134,9,14,144,145,146,20,149,22,24,25,44,52,58,60,68,69,75,99,115,116,119,121,122,126],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]":[1,130,5,135,12,13,14,16,22,24,25,33,37,41,52,53,57,59,60,63,75,83,88,89,92,96,97,98,99,102,116,119,120,121,124],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]":[32,33,83,97,56,82,115,53,119,120,121,126],"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-network] Services [Top Level] [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-network] Services [Top Level] [sig-network] Services should be rejected when no endpoints exist [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]":[1,5,6,9,10,12,13,14,24],"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-network] Services [Top Level] [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-node] Downward API [Top Level] [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] [Top Level] [sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-service-catalog] [Feature:PodPreset] PodPreset [Top Level] [sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral [Top Level] [sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI mock volume CSI attach test using mock driver [Top Level] [sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI mock volume CSI online volume expansion [Top Level] [sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] CSI mock volume CSI workload information using mock driver [Top Level] [sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] ConfigMap [Top Level] [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Downward API volume [Top Level] [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner [Top Level] [sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes [Top Level] [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] [Top Level] [sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] EmptyDir wrapper volumes [Top Level] [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage [Top Level] [sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] GCP Volumes GlusterFS [Top Level] [sig-storage] GCP Volumes GlusterFS should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] GCP Volumes NFSv4 [Top Level] [sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] HostPath [Top Level] [sig-storage] HostPath should support subPath [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: azure] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[60,126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[60],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes [Top Level] [sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PV Protection [Top Level] [sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy [Top Level] [sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Top Level] [sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity [Top Level] [sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC [Top Level] [sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] PersistentVolumes:vsphere [Top Level] [sig-storage] PersistentVolumes:vsphere should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Pod Disks [Top Level] [sig-storage] Pod Disks should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]":[139,108,117,71],"[sig-storage] Projected combined [Top Level] [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected configMap [Top Level] [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected downwardAPI [Top Level] [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Projected secret [Top Level] [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Secrets [Top Level] [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] [Top Level] [sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Subpath Atomic writer volumes [Top Level] [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[126],"[sig-storage] Volume Disk Size [Feature:vsphere] [Top Level] [sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv has size rounded up correctly [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4 [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Volume FStype [Feature:vsphere] [Top Level] [sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] [Top Level] [sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Volume limits [Top Level] [sig-storage] Volume limits should verify that all nodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if only datastore is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation fails if the availability zone specified in the storage class have no shared datastores under it. [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with compatible policy and datastore without any zones specified in the storage class fails (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible datastore and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify PVC creation with incompatible storage policy along with compatible zone and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with multiple allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in the storage class. (No shared datastores exist among both zones) [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created and attached to a dynamically created PV, based on the allowed zones, datastore and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify a pod is created on a non-Workspace zone and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] Zone Support [Top Level] [sig-storage] Zone Support Verify dynamically created pv with multiple zones specified in the storage class, shows both the zones on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"[sig-storage] vsphere statefulset [Top Level] [sig-storage] vsphere statefulset vsphere statefulset testing [Suite:openshift/conformance/parallel] [Suite:k8s]":[126],"job.initialize":[19,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,52,53,57,60,61,64,65,66,68,69,70,71,72,73,74,75,77,79,80,81,83,84,85,86,87,89],"node client cert requests armoring: [Top Level] node client cert requests armoring: deny pod's access to /config/master API endpoint [Suite:openshift/conformance/parallel]":[126],"node client cert requests armoring: [Top Level] node client cert requests armoring: node-approver SA token compromised, don't approve random CSRs with client auth [Suite:openshift/conformance/parallel]":[126],"operator.Create the release image containing all images built by this job":[86,87],"operator.Run template e2e-ovirt - e2e-ovirt container lease":[145,146,147,148,149,150,152],"operator.Run template e2e-ovirt - e2e-ovirt container setup":[0,2,3,4,8,138,140,141,142,15,18,148,150,151,152,28,35,36,38,40,43,45,48,49,50,61,64,65,66,70,72,73,74,77,79,80,81,84,85,143,123,100,106,107,109,110,111,112,113,114,118,91],"operator.Run template e2e-ovirt - e2e-ovirt container test":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,23,24,25,27,28,29,31,32,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,52,53,57,60,61,64,65,66,68,69,70,71,72,73,74,75,77,79,80,81,83,84,85,89,91,93,97,98,99,100,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,128,131,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152]}}],"test_id_map":null,"test-metadata":{},"stale-test-threshold":10,"num-stale-tests":463,"add-tabular-names-option":false,"show-tabular-names":false,"description":"","bug-component":0,"code-search-path":"https://github.com/openshift/origin/search","open-test-template":{"url":"https://prow.svc.ci.openshift.org/view/gcs/\u003cgcs_prefix\u003e/\u003cchangelist\u003e","options":{}},"file-bug-template":{"url":"https://bugzilla.redhat.com/enter_bug.cgi","options":{"cf_environment":"test: \u003ctest-name\u003e","cf_internal_whiteboard":"buildcop","classification":"Red Hat","comment":"test: \u003ctest-name\u003e failed, see job: \u003clink\u003e","product":"OpenShift Container Platform","short_desc":"test: \u003ctest-name\u003e"}},"attach-bug-template":{"url":"","options":{}},"results-url-template":{"url":"https://prow.svc.ci.openshift.org/job-history/\u003cgcs_prefix\u003e","options":{}},"code-search-url-template":{"url":"https://github.com/openshift/origin/compare/\u003cstart-custom-0\u003e...\u003cend-custom-0\u003e","options":{}},"about-dashboard-url":"","open-bug-template":{"url":"https://github.com/openshift/origin/issues/","options":{}},"results-text":"See these results on Prow","latest-green":"","triage-enabled":false,"notifications":[],"overall-status":3}
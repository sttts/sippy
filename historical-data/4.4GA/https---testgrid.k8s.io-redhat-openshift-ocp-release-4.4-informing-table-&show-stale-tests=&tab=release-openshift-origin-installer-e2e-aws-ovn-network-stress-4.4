{"test-group-name":"releaseopenshiftorigininstallere2eawsovnnetworkstress44","query":"origin-ci-test/logs/release-openshift-origin-installer-e2e-aws-ovn-network-stress-4.4","status":"Served 5595 results in 0.13 seconds","phase-timer":{"phases":["config load","cache peek (fail: memcache key missing)","state fetch","state decompress","state unmarshal","table creation","table serialize (gob+snappy: 227KiB)","table querying"],"delta":[0.000020418,0.002143457,0.064733889,0.005737399,0.002113017,0.003764887,0.019443259,0.029264483],"total":0.127220809},"cached":false,"summary":"","bugs":{},"changelists":["450","449","448","447","446","445","444","443","442","441","440","439","438","437","436","435","434","433","432","431","430","429","428","427","426","425","424","423","422","421","420","419","418","417","416","415","414","413","412","411","410","409","408","407","406","405","404","403","402","401","400","399","398","397","396","395","394","393","392","391","390","389","388","387","386","385","384","383","382","381","380","379","378","377","376","375","374","373","372","371","370","369","368","367","366","365","364","363","362","361","360","359","358","357","356","355","354","353","352","351","350","349"],"column_ids":["450","449","448","447","446","445","444","443","442","441","440","439","438","437","436","435","434","433","432","431","430","429","428","427","426","425","424","423","422","421","420","419","418","417","416","415","414","413","412","411","410","409","408","407","406","405","404","403","402","401","400","399","398","397","396","395","394","393","392","391","390","389","388","387","386","385","384","383","382","381","380","379","378","377","376","375","374","373","372","371","370","369","368","367","366","365","364","363","362","361","360","359","358","357","356","355","354","353","352","351","350","349"],"custom-columnscolumn-header-names":["Date","Time","Commit","Commit","Infra-Commit"],"groups":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"metrics":["test-duration-minutes"],"tests":[{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":{"fail-cl":"1","fail-count":3,"fail-time":1588590925000,"text":"Alert: 3 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"1","pass-count":0,"pass-time":1588562064000,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":3,"value":12},{"count":4,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":2,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":13,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":2,"value":12},{"count":3,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":3,"value":1},{"count":4,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":7,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":16,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":10,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":2,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":20,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":10,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":2,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":10,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":2,"value":12},{"count":3,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":2,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":7,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":4,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":3,"value":12},{"count":3,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":3,"value":1},{"count":2,"value":12},{"count":5,"value":1},{"count":2,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":10,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":8,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":18,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":8,"value":1},{"count":3,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":20,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":7,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":7,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":7,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":12},{"count":18,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":1},{"count":2,"value":12},{"count":3,"value":1},{"count":3,"value":12},{"count":4,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":3,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":5,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":11,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":1},{"count":2,"value":12},{"count":8,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":9,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":4,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":2,"value":12},{"count":11,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":7,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":1},{"count":1,"value":12},{"count":7,"value":1},{"count":2,"value":12},{"count":8,"value":1},{"count":1,"value":0},{"count":25,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":11,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":20,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":9,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":3,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":2,"value":12},{"count":6,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":1,"value":12},{"count":3,"value":1}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":3,"value":1},{"count":2,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":15,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":12,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":2,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":6,"value":1},{"count":1,"value":12},{"count":12,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":6,"value":1},{"count":1,"value":12},{"count":12,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":6,"value":1},{"count":1,"value":12},{"count":12,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":12,"value":1},{"count":2,"value":12},{"count":9,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":1,"value":1},{"count":5,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":5,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":8,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":12},{"count":5,"value":0},{"count":2,"value":12},{"count":1,"value":1},{"count":3,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":3,"value":12},{"count":1,"value":1},{"count":1,"value":12}],"target":"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":12,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":7,"value":1},{"count":2,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":2,"value":12},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":7,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":16,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":16,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":24,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"Overall","original-name":"Overall","alert":{"fail-cl":"1","fail-count":13,"fail-time":1586081062000,"text":"Alert: 13 failures","message":"","link-text":"","link":"","url-text":"","test-id":"","pass-cl":"","pass-count":0,"pass-time":0,"code-search-path":"github.com/kubernetes/kubernetes/search","test-name":"Overall"},"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":1,"value":0},{"count":18,"value":4},{"count":1,"value":12},{"count":26,"value":4},{"count":1,"value":12},{"count":2,"value":4},{"count":5,"value":12},{"count":10,"value":4},{"count":1,"value":12},{"count":1,"value":4},{"count":2,"value":12},{"count":2,"value":4},{"count":1,"value":12},{"count":14,"value":4},{"count":1,"value":12},{"count":6,"value":4},{"count":1,"value":12},{"count":9,"value":4}],"target":"Overall"},{"name":"job.initialize","original-name":"job.initialize","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":19,"value":0},{"count":1,"value":12},{"count":82,"value":0}],"target":"job"},{"name":"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container setup","original-name":"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container setup","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":12},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":12},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":12},{"count":9,"value":1}],"target":"operator"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":21,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":21,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":4,"value":1},{"count":1,"value":12},{"count":15,"value":1},{"count":1,"value":12},{"count":5,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":10,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":15,"value":1},{"count":1,"value":12},{"count":10,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":16,"value":1},{"count":1,"value":12},{"count":9,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":18,"value":1},{"count":1,"value":12},{"count":7,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":7,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":0},{"count":5,"value":1},{"count":1,"value":12},{"count":1,"value":1},{"count":1,"value":12},{"count":1,"value":1}],"target":"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":1,"value":1},{"count":1,"value":12},{"count":8,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":2,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":12},{"count":3,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":3,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":7,"value":1},{"count":1,"value":12},{"count":6,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":8,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":12},{"count":2,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":9,"value":1},{"count":1,"value":12},{"count":4,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"operator.Run template e2e-aws-ovn-network-stress","original-name":"operator.Run template e2e-aws-ovn-network-stress","alert":null,"linked_bugs":[],"messages":[""],"short_texts":[""],"statuses":[{"count":85,"value":0},{"count":1,"value":12},{"count":16,"value":0}],"target":"operator"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Service endpoints latency [Top Level] [sig-network] Service endpoints latency should not be very high  [Conformance] [Serial] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]","original-name":"[sig-network] Service endpoints latency [Top Level] [sig-network] Service endpoints latency should not be very high  [Conformance] [Serial] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Service endpoints latency [Top Level] [sig-network] Service endpoints latency should not be very high  [Conformance] [Serial] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","original-name":"[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":19,"value":1},{"count":1,"value":0},{"count":26,"value":1},{"count":1,"value":0},{"count":2,"value":1},{"count":5,"value":0},{"count":10,"value":1},{"count":1,"value":0},{"count":1,"value":1},{"count":2,"value":0},{"count":2,"value":1},{"count":1,"value":0},{"count":14,"value":1},{"count":1,"value":0},{"count":6,"value":1},{"count":1,"value":0},{"count":9,"value":1}],"target":"[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"},{"name":"operator.All images are built and tagged into stable","original-name":"operator.All images are built and tagged into stable","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":46,"value":1},{"count":1,"value":0},{"count":17,"value":1},{"count":1,"value":0},{"count":37,"value":1}],"target":"operator"},{"name":"operator.Create the release image containing all images built by this job","original-name":"operator.Create the release image containing all images built by this job","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":46,"value":1},{"count":1,"value":0},{"count":17,"value":1},{"count":1,"value":0},{"count":37,"value":1}],"target":"operator"},{"name":"operator.Find all of the input images from ocp/4.4:${component} and tag them into the output image stream","original-name":"operator.Find all of the input images from ocp/4.4:${component} and tag them into the output image stream","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":46,"value":1},{"count":1,"value":0},{"count":17,"value":1},{"count":1,"value":0},{"count":37,"value":1}],"target":"operator"},{"name":"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container teardown","original-name":"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container teardown","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":46,"value":1},{"count":1,"value":0},{"count":17,"value":1},{"count":1,"value":0},{"count":20,"value":1},{"count":1,"value":0},{"count":16,"value":1}],"target":"operator"},{"name":"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container test","original-name":"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container test","alert":null,"linked_bugs":[],"messages":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"short_texts":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"statuses":[{"count":46,"value":1},{"count":1,"value":0},{"count":17,"value":1},{"count":1,"value":0},{"count":20,"value":1},{"count":1,"value":0},{"count":16,"value":1}],"target":"operator"}],"row_ids":["[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]","Overall","job.initialize","operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container setup","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","operator.Run template e2e-aws-ovn-network-stress","[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Networking [Top Level] [sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Service endpoints latency [Top Level] [sig-network] Service endpoints latency should not be very high  [Conformance] [Serial] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","[sig-network] Services [Top Level] [sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]","operator.All images are built and tagged into stable","operator.Create the release image containing all images built by this job","operator.Find all of the input images from ocp/4.4:${component} and tag them into the output image stream","operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container teardown","operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container test"],"timestamps":[1588648583000,1588619752000,1588590925000,1588562064000,1588533202000,1588504339000,1588475487000,1588446619000,1588417762000,1588388904000,1588360064000,1588331193000,1588302336000,1588273510000,1588244680000,1588215820000,1588186994000,1588158194000,1588129335000,1588100471000,1588071629000,1588071599000,1588042769000,1588013890000,1587985088000,1587956226000,1587927365000,1587898505000,1587869646000,1587840797000,1587811925000,1587783066000,1587754240000,1587725376000,1587696584000,1587667724000,1587638939000,1587610062000,1587581208000,1587552331000,1587523488000,1587494644000,1587465828000,1587437019000,1587408160000,1587395418000,1587379337000,1587350478000,1587321616000,1587292757000,1587263898000,1587235042000,1587206176000,1587177377000,1587148522000,1587121079000,1587090786000,1587061923000,1587033082000,1587004219000,1586975390000,1586946552000,1586917723000,1586892286000,1586888861000,1586860048000,1586831191000,1586802330000,1586773540000,1586744644000,1586715784000,1586686928000,1586658071000,1586629208000,1586600345000,1586571484000,1586542654000,1586513795000,1586484945000,1586456174000,1586427283000,1586398427000,1586369574000,1586340685000,1586311827000,1586283030000,1586254207000,1586225348000,1586196497000,1586167648000,1586138783000,1586109928000,1586081062000,1586052203000,1586023379000,1586015049000,1585965667000,1585936858000,1585908023000,1585879167000,1585850286000,1585821440000],"clusters":[{"test_status":12,"message":"","area":400,"test_results":{"Overall":[64,19,66,67,70,46,49,50,51,52,53,92,85],"[sig-network] DNS [Top Level] [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[57],"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[6,79],"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[78],"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[16],"[sig-network] DNS [Top Level] [sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[6],"[sig-network] DNS [Top Level] [sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[56,60],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,97,2,27,4,71,8,10,98,13,17,26,15,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,4,7,8,74,12,13,14,15,18,58,27,29],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,2,7,8,43,15,81,40],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[8,14,15,17,26,31,35,36,39,41,42,44,47,48,54,55,57,58,59,69,71,74,75,77,79,80,82,84,86,89,94,97,98,99,101],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[1,2,27,6,7,8,18,34,14,13,48,17,82,23,24,15,28,29,30,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[2,11,4,69,38,7,41,75,13,14,15,18,99,84,26,31,60,30,101],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,4,7,10,15,18,21,27,28,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[2,4,7,8,75,98,13,17,18,21,55,24,15,29,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,65,2,7,74,12,13,15,16,17,84,23,24,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,97,98,36,7,10,15,81,18,17,22,23,26,28,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[1,34,33,7,10,13,78,15,17,22,24,27,29],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,1,2,36,7,8,10,75,13,15,18,21,24,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,97,2,36,38,7,8,13,15,16,18,21,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,4,7,8,9,13,14,15,17,18,23,24,30,31],"[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client [Top Level] [sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,2,36,13,14,15,17,18,55,28,29,31],"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[82,79],"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[57],"[sig-network] Networking Granular Checks: Pods [Top Level] [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[24],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]":[34,35,6,74,45,47,80,21,58,91,62,63],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,16,38,73,12,45,80,81,84,87,89,58],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]":[36,74,12,17,83,84,62,26,61,94],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]":[1,100,73,10,55,45,82,84,9,88,95],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,68,40,9,10,11,78,15,84,55,60,94],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]":[65,98,100,69,38,86,56,89,91],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]":[84,1,2,35,97,69,65,40,74,11,13,77,72,20,21,87,89,33,93,31],"[sig-network] Networking Granular Checks: Services [Top Level] [sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]":[0,32,18,35,6,73,45,96,77,80,56,82,20,88,84,27,94],"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[35],"[sig-network] Proxy version v1 [Top Level] [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[55],"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[24,22],"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[80],"[sig-network] Services [Top Level] [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[40,81,55,24,88,59],"[sig-network] Services [Top Level] [sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]":[3,65,99,4,83,20,57,36,62,95],"[sig-network] Services [Top Level] [sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]":[36],"[sig-network] Services [Top Level] [sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]":[16,44],"[sig-network] Services [Top Level] [sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]":[1,4,16,43,80,22],"[sig-network] Services [Top Level] [sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]":[0],"job.initialize":[19],"operator.Run template e2e-aws-ovn-network-stress":[85],"operator.Run template e2e-aws-ovn-network-stress - e2e-aws-ovn-network-stress container setup":[19,66,67,70,49,50,51,52,53,92]}}],"test_id_map":null,"test-metadata":{},"stale-test-threshold":10,"num-stale-tests":2,"add-tabular-names-option":false,"show-tabular-names":false,"description":"","bug-component":0,"code-search-path":"https://github.com/openshift/origin/search","open-test-template":{"url":"https://prow.svc.ci.openshift.org/view/gcs/\u003cgcs_prefix\u003e/\u003cchangelist\u003e","options":{}},"file-bug-template":{"url":"https://bugzilla.redhat.com/enter_bug.cgi","options":{"cf_environment":"test: \u003ctest-name\u003e","cf_internal_whiteboard":"buildcop","classification":"Red Hat","comment":"test: \u003ctest-name\u003e failed, see job: \u003clink\u003e","product":"OpenShift Container Platform","short_desc":"test: \u003ctest-name\u003e"}},"attach-bug-template":{"url":"","options":{}},"results-url-template":{"url":"https://prow.svc.ci.openshift.org/job-history/\u003cgcs_prefix\u003e","options":{}},"code-search-url-template":{"url":"https://github.com/openshift/origin/compare/\u003cstart-custom-0\u003e...\u003cend-custom-0\u003e","options":{}},"about-dashboard-url":"","open-bug-template":{"url":"https://github.com/openshift/origin/issues/","options":{}},"results-text":"See these results on Prow","latest-green":"","triage-enabled":false,"notifications":[],"overall-status":3}